{"remainingRequest":"/Users/pro/Documents/WebWork/GitHub/Callanna-iBlog/node_modules/babel-loader/lib/index.js??ref--2-1!/Users/pro/Documents/WebWork/GitHub/Callanna-iBlog/.nuxt/router.scrollBehavior.js","dependencies":[{"path":"/Users/pro/Documents/WebWork/GitHub/Callanna-iBlog/.nuxt/router.scrollBehavior.js","mtime":1598700047629},{"path":"/Users/pro/Documents/WebWork/GitHub/Callanna-iBlog/node_modules/cache-loader/dist/cjs.js","mtime":1583743859870},{"path":"/Users/pro/Documents/WebWork/GitHub/Callanna-iBlog/node_modules/babel-loader/lib/index.js","mtime":1578715241550}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXM2Lm9iamVjdC50by1zdHJpbmciOwppbXBvcnQgeyBnZXRNYXRjaGVkQ29tcG9uZW50cyB9IGZyb20gJy4vdXRpbHMnOwoKaWYgKHByb2Nlc3MuY2xpZW50KSB7CiAgaWYgKCdzY3JvbGxSZXN0b3JhdGlvbicgaW4gd2luZG93Lmhpc3RvcnkpIHsKICAgIHdpbmRvdy5oaXN0b3J5LnNjcm9sbFJlc3RvcmF0aW9uID0gJ21hbnVhbCc7IC8vIHJlc2V0IHNjcm9sbFJlc3RvcmF0aW9uIHRvIGF1dG8gd2hlbiBsZWF2aW5nIHBhZ2UsIGFsbG93aW5nIHBhZ2UgcmVsb2FkCiAgICAvLyBhbmQgYmFjay1uYXZpZ2F0aW9uIGZyb20gb3RoZXIgcGFnZXMgdG8gdXNlIHRoZSBicm93c2VyIHRvIHJlc3RvcmUgdGhlCiAgICAvLyBzY3JvbGxpbmcgcG9zaXRpb24uCgogICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2JlZm9yZXVubG9hZCcsIGZ1bmN0aW9uICgpIHsKICAgICAgd2luZG93Lmhpc3Rvcnkuc2Nyb2xsUmVzdG9yYXRpb24gPSAnYXV0byc7CiAgICB9KTsgLy8gU2V0dGluZyBzY3JvbGxSZXN0b3JhdGlvbiB0byBtYW51YWwgYWdhaW4gd2hlbiByZXR1cm5pbmcgdG8gdGhpcyBwYWdlLgoKICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdsb2FkJywgZnVuY3Rpb24gKCkgewogICAgICB3aW5kb3cuaGlzdG9yeS5zY3JvbGxSZXN0b3JhdGlvbiA9ICdtYW51YWwnOwogICAgfSk7CiAgfQp9CgpleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiAodG8sIGZyb20sIHNhdmVkUG9zaXRpb24pIHsKICAvLyBpZiB0aGUgcmV0dXJuZWQgcG9zaXRpb24gaXMgZmFsc3kgb3IgYW4gZW1wdHkgb2JqZWN0LAogIC8vIHdpbGwgcmV0YWluIGN1cnJlbnQgc2Nyb2xsIHBvc2l0aW9uLgogIHZhciBwb3NpdGlvbiA9IGZhbHNlOyAvLyBpZiBubyBjaGlsZHJlbiBkZXRlY3RlZCBhbmQgc2Nyb2xsVG9Ub3AgaXMgbm90IGV4cGxpY2l0bHkgZGlzYWJsZWQKCiAgdmFyIFBhZ2VzID0gZ2V0TWF0Y2hlZENvbXBvbmVudHModG8pOwoKICBpZiAoUGFnZXMubGVuZ3RoIDwgMiAmJiBQYWdlcy5ldmVyeShmdW5jdGlvbiAoUGFnZSkgewogICAgcmV0dXJuIFBhZ2Uub3B0aW9ucy5zY3JvbGxUb1RvcCAhPT0gZmFsc2U7CiAgfSkpIHsKICAgIC8vIHNjcm9sbCB0byB0aGUgdG9wIG9mIHRoZSBwYWdlCiAgICBwb3NpdGlvbiA9IHsKICAgICAgeDogMCwKICAgICAgeTogMAogICAgfTsKICB9IGVsc2UgaWYgKFBhZ2VzLnNvbWUoZnVuY3Rpb24gKFBhZ2UpIHsKICAgIHJldHVybiBQYWdlLm9wdGlvbnMuc2Nyb2xsVG9Ub3A7CiAgfSkpIHsKICAgIC8vIGlmIG9uZSBvZiB0aGUgY2hpbGRyZW4gaGFzIHNjcm9sbFRvVG9wIG9wdGlvbiBzZXQgdG8gdHJ1ZQogICAgcG9zaXRpb24gPSB7CiAgICAgIHg6IDAsCiAgICAgIHk6IDAKICAgIH07CiAgfSAvLyBzYXZlZFBvc2l0aW9uIGlzIG9ubHkgYXZhaWxhYmxlIGZvciBwb3BzdGF0ZSBuYXZpZ2F0aW9ucyAoYmFjayBidXR0b24pCgoKICBpZiAoc2F2ZWRQb3NpdGlvbikgewogICAgcG9zaXRpb24gPSBzYXZlZFBvc2l0aW9uOwogIH0KCiAgdmFyIG51eHQgPSB3aW5kb3cuJG51eHQ7IC8vIHRyaWdnZXJTY3JvbGwgaXMgb25seSBmaXJlZCB3aGVuIGEgbmV3IGNvbXBvbmVudCBpcyBsb2FkZWQKCiAgaWYgKHRvLnBhdGggPT09IGZyb20ucGF0aCAmJiB0by5oYXNoICE9PSBmcm9tLmhhc2gpIHsKICAgIG51eHQuJG5leHRUaWNrKGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuIG51eHQuJGVtaXQoJ3RyaWdnZXJTY3JvbGwnKTsKICAgIH0pOwogIH0KCiAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlKSB7CiAgICAvLyB3YWl0IGZvciB0aGUgb3V0IHRyYW5zaXRpb24gdG8gY29tcGxldGUgKGlmIG5lY2Vzc2FyeSkKICAgIG51eHQuJG9uY2UoJ3RyaWdnZXJTY3JvbGwnLCBmdW5jdGlvbiAoKSB7CiAgICAgIC8vIGNvb3JkcyB3aWxsIGJlIHVzZWQgaWYgbm8gc2VsZWN0b3IgaXMgcHJvdmlkZWQsCiAgICAgIC8vIG9yIGlmIHRoZSBzZWxlY3RvciBkaWRuJ3QgbWF0Y2ggYW55IGVsZW1lbnQuCiAgICAgIGlmICh0by5oYXNoKSB7CiAgICAgICAgdmFyIGhhc2ggPSB0by5oYXNoOyAvLyBDU1MuZXNjYXBlKCkgaXMgbm90IHN1cHBvcnRlZCB3aXRoIElFIGFuZCBFZGdlLgoKICAgICAgICBpZiAodHlwZW9mIHdpbmRvdy5DU1MgIT09ICd1bmRlZmluZWQnICYmIHR5cGVvZiB3aW5kb3cuQ1NTLmVzY2FwZSAhPT0gJ3VuZGVmaW5lZCcpIHsKICAgICAgICAgIGhhc2ggPSAnIycgKyB3aW5kb3cuQ1NTLmVzY2FwZShoYXNoLnN1YnN0cigxKSk7CiAgICAgICAgfQoKICAgICAgICB0cnkgewogICAgICAgICAgaWYgKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoaGFzaCkpIHsKICAgICAgICAgICAgLy8gc2Nyb2xsIHRvIGFuY2hvciBieSByZXR1cm5pbmcgdGhlIHNlbGVjdG9yCiAgICAgICAgICAgIHBvc2l0aW9uID0gewogICAgICAgICAgICAgIHNlbGVjdG9yOiBoYXNoCiAgICAgICAgICAgIH07CiAgICAgICAgICB9CiAgICAgICAgfSBjYXRjaCAoZSkgewogICAgICAgICAgY29uc29sZS53YXJuKCdGYWlsZWQgdG8gc2F2ZSBzY3JvbGwgcG9zaXRpb24uIFBsZWFzZSBhZGQgQ1NTLmVzY2FwZSgpIHBvbHlmaWxsIChodHRwczovL2dpdGh1Yi5jb20vbWF0aGlhc2J5bmVucy9DU1MuZXNjYXBlKS4nKTsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIHJlc29sdmUocG9zaXRpb24pOwogICAgfSk7CiAgfSk7Cn0="},{"version":3,"sources":["/Users/pro/Documents/WebWork/GitHub/Callanna-iBlog/.nuxt/router.scrollBehavior.js"],"names":["getMatchedComponents","process","client","window","history","scrollRestoration","addEventListener","to","from","savedPosition","position","Pages","length","every","Page","options","scrollToTop","x","y","some","nuxt","$nuxt","path","hash","$nextTick","$emit","Promise","resolve","$once","CSS","escape","substr","document","querySelector","selector","e","console","warn"],"mappings":"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","sourcesContent":["import { getMatchedComponents } from './utils'\n\nif (process.client) {\n  if ('scrollRestoration' in window.history) {\n    window.history.scrollRestoration = 'manual'\n\n    // reset scrollRestoration to auto when leaving page, allowing page reload\n    // and back-navigation from other pages to use the browser to restore the\n    // scrolling position.\n    window.addEventListener('beforeunload', () => {\n      window.history.scrollRestoration = 'auto'\n    })\n\n    // Setting scrollRestoration to manual again when returning to this page.\n    window.addEventListener('load', () => {\n      window.history.scrollRestoration = 'manual'\n    })\n  }\n}\n\nexport default function (to, from, savedPosition) {\n  // if the returned position is falsy or an empty object,\n  // will retain current scroll position.\n  let position = false\n\n  // if no children detected and scrollToTop is not explicitly disabled\n  const Pages = getMatchedComponents(to)\n  if (\n    Pages.length < 2 &&\n    Pages.every(Page => Page.options.scrollToTop !== false)\n  ) {\n    // scroll to the top of the page\n    position = { x: 0, y: 0 }\n  } else if (Pages.some(Page => Page.options.scrollToTop)) {\n    // if one of the children has scrollToTop option set to true\n    position = { x: 0, y: 0 }\n  }\n\n  // savedPosition is only available for popstate navigations (back button)\n  if (savedPosition) {\n    position = savedPosition\n  }\n\n  const nuxt = window.$nuxt\n\n  // triggerScroll is only fired when a new component is loaded\n  if (to.path === from.path && to.hash !== from.hash) {\n    nuxt.$nextTick(() => nuxt.$emit('triggerScroll'))\n  }\n\n  return new Promise((resolve) => {\n    // wait for the out transition to complete (if necessary)\n    nuxt.$once('triggerScroll', () => {\n      // coords will be used if no selector is provided,\n      // or if the selector didn't match any element.\n      if (to.hash) {\n        let hash = to.hash\n        // CSS.escape() is not supported with IE and Edge.\n        if (typeof window.CSS !== 'undefined' && typeof window.CSS.escape !== 'undefined') {\n          hash = '#' + window.CSS.escape(hash.substr(1))\n        }\n        try {\n          if (document.querySelector(hash)) {\n            // scroll to anchor by returning the selector\n            position = { selector: hash }\n          }\n        } catch (e) {\n          console.warn('Failed to save scroll position. Please add CSS.escape() polyfill (https://github.com/mathiasbynens/CSS.escape).')\n        }\n      }\n      resolve(position)\n    })\n  })\n}\n"]}]}