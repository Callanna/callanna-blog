{"remainingRequest":"/Users/pro/Documents/WebWork/GitHub/Callanna-iBlog/node_modules/babel-loader/lib/index.js??ref--2-1!/Users/pro/Documents/WebWork/GitHub/Callanna-iBlog/.nuxt/auth/middleware.js","dependencies":[{"path":"/Users/pro/Documents/WebWork/GitHub/Callanna-iBlog/.nuxt/auth/middleware.js","mtime":1598700047630},{"path":"/Users/pro/Documents/WebWork/GitHub/Callanna-iBlog/node_modules/cache-loader/dist/cjs.js","mtime":1583743859870},{"path":"/Users/pro/Documents/WebWork/GitHub/Callanna-iBlog/node_modules/babel-loader/lib/index.js","mtime":1578715241550}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IE1pZGRsZXdhcmUgZnJvbSAnLi4vbWlkZGxld2FyZSc7CmltcG9ydCB7IHJvdXRlT3B0aW9uLCBnZXRNYXRjaGVkQ29tcG9uZW50cywgbm9ybWFsaXplUGF0aCB9IGZyb20gJy4vdXRpbGl0aWVzJzsKCk1pZGRsZXdhcmUuYXV0aCA9IGZ1bmN0aW9uIChjdHgpIHsKICAvLyBEaXNhYmxlIG1pZGRsZXdhcmUgaWYgb3B0aW9uczogeyBhdXRoOiBmYWxzZSB9IGlzIHNldCBvbiB0aGUgcm91dGUKICBpZiAocm91dGVPcHRpb24oY3R4LnJvdXRlLCAnYXV0aCcsIGZhbHNlKSkgewogICAgcmV0dXJuOwogIH0gLy8gRGlzYWJsZSBtaWRkbGV3YXJlIGlmIG5vIHJvdXRlIHdhcyBtYXRjaGVkIHRvIGFsbG93IDQwNC9lcnJvciBwYWdlCgoKICB2YXIgbWF0Y2hlcyA9IFtdOwogIHZhciBDb21wb25lbnRzID0gZ2V0TWF0Y2hlZENvbXBvbmVudHMoY3R4LnJvdXRlLCBtYXRjaGVzKTsKCiAgaWYgKCFDb21wb25lbnRzLmxlbmd0aCkgewogICAgcmV0dXJuOwogIH0KCiAgdmFyIF9jdHgkJGF1dGgkb3B0aW9ucyRyZSA9IGN0eC4kYXV0aC5vcHRpb25zLnJlZGlyZWN0LAogICAgICBsb2dpbiA9IF9jdHgkJGF1dGgkb3B0aW9ucyRyZS5sb2dpbiwKICAgICAgY2FsbGJhY2sgPSBfY3R4JCRhdXRoJG9wdGlvbnMkcmUuY2FsbGJhY2s7CiAgdmFyIHBhZ2VJc0luR3Vlc3RNb2RlID0gcm91dGVPcHRpb24oY3R4LnJvdXRlLCAnYXV0aCcsICdndWVzdCcpOwoKICB2YXIgaW5zaWRlUGFnZSA9IGZ1bmN0aW9uIGluc2lkZVBhZ2UocGFnZSkgewogICAgcmV0dXJuIG5vcm1hbGl6ZVBhdGgoY3R4LnJvdXRlLnBhdGgpID09PSBub3JtYWxpemVQYXRoKHBhZ2UpOwogIH07CgogIGlmIChjdHguJGF1dGguJHN0YXRlLmxvZ2dlZEluKSB7CiAgICAvLyAtLSBBdXRob3JpemVkIC0tCiAgICBpZiAoIWxvZ2luIHx8IGluc2lkZVBhZ2UobG9naW4pIHx8IHBhZ2VJc0luR3Vlc3RNb2RlKSB7CiAgICAgIGN0eC4kYXV0aC5yZWRpcmVjdCgnaG9tZScpOwogICAgfQogIH0gZWxzZSB7CiAgICAvLyAtLSBHdWVzdCAtLQogICAgLy8gKFRob3NlIHBhc3NpbmcgYGNhbGxiYWNrYCBhdCBydW50aW1lIG5lZWQgdG8gbWFyayB0aGVpciBjYWxsYmFjayBjb21wb25lbnQKICAgIC8vIHdpdGggYGF1dGg6IGZhbHNlYCB0byBhdm9pZCBhbiB1bm5lY2Vzc2FyeSByZWRpcmVjdCBmcm9tIGNhbGxiYWNrIHRvIGxvZ2luKQogICAgaWYgKCFwYWdlSXNJbkd1ZXN0TW9kZSAmJiAoIWNhbGxiYWNrIHx8ICFpbnNpZGVQYWdlKGNhbGxiYWNrKSkpIHsKICAgICAgY3R4LiRhdXRoLnJlZGlyZWN0KCdsb2dpbicpOwogICAgfQogIH0KfTs="},{"version":3,"sources":["/Users/pro/Documents/WebWork/GitHub/Callanna-iBlog/.nuxt/auth/middleware.js"],"names":["Middleware","routeOption","getMatchedComponents","normalizePath","auth","ctx","route","matches","Components","length","$auth","options","redirect","login","callback","pageIsInGuestMode","insidePage","page","path","$state","loggedIn"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,eAAvB;AACA,SAASC,WAAT,EAAsBC,oBAAtB,EAA4CC,aAA5C,QAAiE,aAAjE;;AAEAH,UAAU,CAACI,IAAX,GAAkB,UAAUC,GAAV,EAAe;AAC/B;AACA,MAAIJ,WAAW,CAACI,GAAG,CAACC,KAAL,EAAY,MAAZ,EAAoB,KAApB,CAAf,EAA2C;AACzC;AACD,GAJ8B,CAM/B;;;AACA,MAAMC,OAAO,GAAG,EAAhB;AACA,MAAMC,UAAU,GAAGN,oBAAoB,CAACG,GAAG,CAACC,KAAL,EAAYC,OAAZ,CAAvC;;AACA,MAAI,CAACC,UAAU,CAACC,MAAhB,EAAwB;AACtB;AACD;;AAX8B,8BAaHJ,GAAG,CAACK,KAAJ,CAAUC,OAAV,CAAkBC,QAbf;AAAA,MAavBC,KAbuB,yBAavBA,KAbuB;AAAA,MAahBC,QAbgB,yBAahBA,QAbgB;AAc/B,MAAMC,iBAAiB,GAAGd,WAAW,CAACI,GAAG,CAACC,KAAL,EAAY,MAAZ,EAAoB,OAApB,CAArC;;AACA,MAAMU,UAAU,GAAG,SAAbA,UAAa,CAAAC,IAAI;AAAA,WAAId,aAAa,CAACE,GAAG,CAACC,KAAJ,CAAUY,IAAX,CAAb,KAAkCf,aAAa,CAACc,IAAD,CAAnD;AAAA,GAAvB;;AAEA,MAAIZ,GAAG,CAACK,KAAJ,CAAUS,MAAV,CAAiBC,QAArB,EAA+B;AAC7B;AACA,QAAI,CAACP,KAAD,IAAUG,UAAU,CAACH,KAAD,CAApB,IAA+BE,iBAAnC,EAAsD;AACpDV,MAAAA,GAAG,CAACK,KAAJ,CAAUE,QAAV,CAAmB,MAAnB;AACD;AACF,GALD,MAKO;AACL;AACA;AACA;AACA,QAAI,CAACG,iBAAD,KAAuB,CAACD,QAAD,IAAa,CAACE,UAAU,CAACF,QAAD,CAA/C,CAAJ,EAAgE;AAC9DT,MAAAA,GAAG,CAACK,KAAJ,CAAUE,QAAV,CAAmB,OAAnB;AACD;AACF;AACF,CA9BD","sourcesContent":["import Middleware from '../middleware'\nimport { routeOption, getMatchedComponents, normalizePath } from './utilities'\n\nMiddleware.auth = function (ctx) {\n  // Disable middleware if options: { auth: false } is set on the route\n  if (routeOption(ctx.route, 'auth', false)) {\n    return\n  }\n\n  // Disable middleware if no route was matched to allow 404/error page\n  const matches = []\n  const Components = getMatchedComponents(ctx.route, matches)\n  if (!Components.length) {\n    return\n  }\n\n  const { login, callback } = ctx.$auth.options.redirect\n  const pageIsInGuestMode = routeOption(ctx.route, 'auth', 'guest')\n  const insidePage = page => normalizePath(ctx.route.path) === normalizePath(page)\n\n  if (ctx.$auth.$state.loggedIn) {\n    // -- Authorized --\n    if (!login || insidePage(login) || pageIsInGuestMode) {\n      ctx.$auth.redirect('home')\n    }\n  } else {\n    // -- Guest --\n    // (Those passing `callback` at runtime need to mark their callback component\n    // with `auth: false` to avoid an unnecessary redirect from callback to login)\n    if (!pageIsInGuestMode && (!callback || !insidePage(callback))) {\n      ctx.$auth.redirect('login')\n    }\n  }\n}\n"]}]}