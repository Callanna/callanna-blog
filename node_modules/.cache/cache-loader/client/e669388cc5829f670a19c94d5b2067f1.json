{"remainingRequest":"/Users/pro/Documents/WebWork/GitHub/Callanna-iBlog/node_modules/babel-loader/lib/index.js??ref--2-1!/Users/pro/Documents/WebWork/GitHub/Callanna-iBlog/.nuxt/client.js","dependencies":[{"path":"/Users/pro/Documents/WebWork/GitHub/Callanna-iBlog/.nuxt/client.js","mtime":1598700047629},{"path":"/Users/pro/Documents/WebWork/GitHub/Callanna-iBlog/node_modules/cache-loader/dist/cjs.js","mtime":1583743859870},{"path":"/Users/pro/Documents/WebWork/GitHub/Callanna-iBlog/node_modules/babel-loader/lib/index.js","mtime":1578715241550}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/pro/Documents/WebWork/GitHub/Callanna-iBlog/.nuxt/client.js"],"names":["Vue","fetch","middleware","applyAsyncData","promisify","middlewareSeries","sanitizeComponent","resolveRouteComponents","getMatchedComponents","getMatchedComponentsInstances","flatMapComponents","setContext","getLocation","compile","getQueryDiff","globalHandleError","createApp","NuxtError","NuxtLink","component","name","global","_lastPaths","app","router","store","NUXT","window","__NUXT__","Object","assign","config","logs","length","ssrLogSyle","console","group","forEach","logObj","type","log","args","groupEnd","$nuxt","defaultErrorHandler","errorHandler","err","vm","info","handled","rest","$root","nuxtApp","keys","find","nuxtInstance","error","process","env","NODE_ENV","message","then","mountApp","catch","componentOption","key","options","option","mapTransitions","Components","to","from","componentTransitions","transition","map","Component","transitions","matched","components","default","fromTransitions","filter","toLowerCase","includes","loadAsyncComponents","next","_pathChanged","Boolean","nuxt","path","_queryChanged","JSON","stringify","query","_diffQuery","$loading","start","manual","instance","startLoader","some","watchQuery","Array","isArray","apply","statusCode","status","response","test","location","reload","$emit","applySSRData","ssrData","serverRendered","_Ctor","resolveComponents","base","mode","match","_","index","_Component","data","callMiddleware","context","layout","midd","unknownMiddleware","concat","render","fromMatches","i","params","nextCalled","_next","finish","pause","route","bind","_dateLastError","dateErr","_hadError","matches","call","errorLayout","loadLayout","asyncData","setTransitions","_errored","isValid","validate","Promise","all","_path","_dataRefresh","instances","_isMounted","promises","hasAsyncData","hasFetch","loadingIncrease","promise","asyncDataResult","increase","push","loading","p","resolve","fetchResult","normalizeComponents","___","extend","showNextPage","$options","setLayout","fixPrepatch","nextTick","_isDestroyed","constructor","$vnode","keepAlive","newData","set","$data","$nextTick","setTimeout","hotReloadAPI","nuxtReady","_app","onNuxtReadyCbs","cb","_onNuxtLoaded","afterEach","noopData","noopFetch","getNuxtChildComponents","$parent","$components","$children","$child","nuxtChild","c","__file","module","hot","addHotReload","$component","depth","_hasHotReload","_forceUpdate","$forceUpdate","currentRoute","isHMR","layoutName","pAsyncData","pFetch","__app","mount","$mount","beforeEach","clientFirstMount","unregisterHook","undefined"],"mappings":"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","sourcesContent":["import Vue from 'vue'\nimport fetch from 'unfetch'\nimport middleware from './middleware.js'\nimport {\n  applyAsyncData,\n  promisify,\n  middlewareSeries,\n  sanitizeComponent,\n  resolveRouteComponents,\n  getMatchedComponents,\n  getMatchedComponentsInstances,\n  flatMapComponents,\n  setContext,\n  getLocation,\n  compile,\n  getQueryDiff,\n  globalHandleError\n} from './utils.js'\nimport { createApp, NuxtError } from './index.js'\nimport NuxtLink from './components/nuxt-link.client.js' // should be included after ./index.js\n\n// Component: <NuxtLink>\nVue.component(NuxtLink.name, NuxtLink)\nVue.component('NLink', NuxtLink)\n\nif (!global.fetch) { global.fetch = fetch }\n\n// Global shared references\nlet _lastPaths = []\nlet app\nlet router\nlet store\n\n// Try to rehydrate SSR data from window\nconst NUXT = window.__NUXT__ || {}\n\nObject.assign(Vue.config, {\"silent\":false,\"performance\":true})\n\nconst logs = NUXT.logs || []\n  if (logs.length > 0) {\n  const ssrLogSyle = 'background: #2E495E;border-radius: 0.5em;color: white;font-weight: bold;padding: 2px 0.5em;'\n  console.group && console.group ('%cNuxt SSR', ssrLogSyle)\n  logs.forEach(logObj => (console[logObj.type] || console.log)(...logObj.args))\n  delete NUXT.logs\n  console.groupEnd && console.groupEnd()\n}\n\n// Setup global Vue error handler\nif (!Vue.config.$nuxt) {\n  const defaultErrorHandler = Vue.config.errorHandler\n  Vue.config.errorHandler = (err, vm, info, ...rest) => {\n    // Call other handler if exist\n    let handled = null\n    if (typeof defaultErrorHandler === 'function') {\n      handled = defaultErrorHandler(err, vm, info, ...rest)\n    }\n    if (handled === true) {\n      return handled\n    }\n\n    if (vm && vm.$root) {\n      const nuxtApp = Object.keys(Vue.config.$nuxt)\n        .find(nuxtInstance => vm.$root[nuxtInstance])\n\n      // Show Nuxt Error Page\n      if (nuxtApp && vm.$root[nuxtApp].error && info !== 'render function') {\n        vm.$root[nuxtApp].error(err)\n      }\n    }\n\n    if (typeof defaultErrorHandler === 'function') {\n      return handled\n    }\n\n    // Log to console\n    if (process.env.NODE_ENV !== 'production') {\n      console.error(err)\n    } else {\n      console.error(err.message || err)\n    }\n  }\n  Vue.config.$nuxt = {}\n}\nVue.config.$nuxt.$nuxt = true\n\nconst errorHandler = Vue.config.errorHandler || console.error\n\n// Create and mount App\ncreateApp().then(mountApp).catch(errorHandler)\n\nfunction componentOption (component, key, ...args) {\n  if (!component || !component.options || !component.options[key]) {\n    return {}\n  }\n  const option = component.options[key]\n  if (typeof option === 'function') {\n    return option(...args)\n  }\n  return option\n}\n\nfunction mapTransitions (Components, to, from) {\n  const componentTransitions = (component) => {\n    const transition = componentOption(component, 'transition', to, from) || {}\n    return (typeof transition === 'string' ? { name: transition } : transition)\n  }\n\n  return Components.map((Component) => {\n    // Clone original object to prevent overrides\n    const transitions = Object.assign({}, componentTransitions(Component))\n\n    // Combine transitions & prefer `leave` transitions of 'from' route\n    if (from && from.matched.length && from.matched[0].components.default) {\n      const fromTransitions = componentTransitions(from.matched[0].components.default)\n      Object.keys(fromTransitions)\n        .filter(key => fromTransitions[key] && key.toLowerCase().includes('leave'))\n        .forEach((key) => { transitions[key] = fromTransitions[key] })\n    }\n\n    return transitions\n  })\n}\n\nasync function loadAsyncComponents (to, from, next) {\n  // Check if route path changed (this._pathChanged), only if the page is not an error (for validate())\n  this._pathChanged = Boolean(app.nuxt.err) || from.path !== to.path\n  this._queryChanged = JSON.stringify(to.query) !== JSON.stringify(from.query)\n  this._diffQuery = (this._queryChanged ? getQueryDiff(to.query, from.query) : [])\n\n  if (this._pathChanged && this.$loading.start && !this.$loading.manual) {\n    this.$loading.start()\n  }\n\n  try {\n    if (!this._pathChanged && this._queryChanged) {\n      const Components = await resolveRouteComponents(\n        to,\n        (Component, instance) => ({ Component, instance })\n      )\n      // Add a marker on each component that it needs to refresh or not\n      const startLoader = Components.some(({ Component, instance }) => {\n        const watchQuery = Component.options.watchQuery\n        if (watchQuery === true) {\n          return true\n        }\n        if (Array.isArray(watchQuery)) {\n          return watchQuery.some(key => this._diffQuery[key])\n        }\n        if (typeof watchQuery === 'function') {\n          return watchQuery.apply(instance, [to.query, from.query])\n        }\n        return false\n      })\n      if (startLoader && this.$loading.start && !this.$loading.manual) {\n        this.$loading.start()\n      }\n    }\n\n    // Call next()\n    next()\n  } catch (error) {\n    const err = error || {}\n    const statusCode = err.statusCode || err.status || (err.response && err.response.status) || 500\n    const message = err.message || ''\n\n    // Handle chunk loading errors\n    // This may be due to a new deployment or a network problem\n    if (/^Loading( CSS)? chunk (\\d)+ failed\\./.test(message)) {\n      window.location.reload(true /* skip cache */)\n      return // prevent error page blinking for user\n    }\n\n    this.error({ statusCode, message })\n    this.$nuxt.$emit('routeChanged', to, from, err)\n    next()\n  }\n}\n\nfunction applySSRData (Component, ssrData) {\n  if (NUXT.serverRendered && ssrData) {\n    applyAsyncData(Component, ssrData)\n  }\n\n  Component._Ctor = Component\n  return Component\n}\n\n// Get matched components\nfunction resolveComponents (router) {\n  const path = getLocation(router.options.base, router.options.mode)\n\n  return flatMapComponents(router.match(path), async (Component, _, match, key, index) => {\n    // If component is not resolved yet, resolve it\n    if (typeof Component === 'function' && !Component.options) {\n      Component = await Component()\n    }\n    // Sanitize it and save it\n    const _Component = applySSRData(sanitizeComponent(Component), NUXT.data ? NUXT.data[index] : null)\n    match.components[key] = _Component\n    return _Component\n  })\n}\n\nfunction callMiddleware (Components, context, layout) {\n  let midd = []\n  let unknownMiddleware = false\n\n  // If layout is undefined, only call global middleware\n  if (typeof layout !== 'undefined') {\n    midd = [] // Exclude global middleware if layout defined (already called before)\n    layout = sanitizeComponent(layout)\n    if (layout.options.middleware) {\n      midd = midd.concat(layout.options.middleware)\n    }\n    Components.forEach((Component) => {\n      if (Component.options.middleware) {\n        midd = midd.concat(Component.options.middleware)\n      }\n    })\n  }\n\n  midd = midd.map((name) => {\n    if (typeof name === 'function') {\n      return name\n    }\n    if (typeof middleware[name] !== 'function') {\n      unknownMiddleware = true\n      this.error({ statusCode: 500, message: 'Unknown middleware ' + name })\n    }\n    return middleware[name]\n  })\n\n  if (unknownMiddleware) {\n    return\n  }\n  return middlewareSeries(midd, context)\n}\n\nasync function render (to, from, next) {\n  if (this._pathChanged === false && this._queryChanged === false) {\n    return next()\n  }\n  // Handle first render on SPA mode\n  if (to === from) {\n    _lastPaths = []\n  } else {\n    const fromMatches = []\n    _lastPaths = getMatchedComponents(from, fromMatches).map((Component, i) => {\n      return compile(from.matched[fromMatches[i]].path)(from.params)\n    })\n  }\n\n  // nextCalled is true when redirected\n  let nextCalled = false\n  const _next = (path) => {\n    if (from.path === path.path && this.$loading.finish) {\n      this.$loading.finish()\n    }\n\n    if (from.path !== path.path && this.$loading.pause) {\n      this.$loading.pause()\n    }\n\n    if (nextCalled) {\n      return\n    }\n\n    nextCalled = true\n    next(path)\n  }\n\n  // Update context\n  await setContext(app, {\n    route: to,\n    from,\n    next: _next.bind(this)\n  })\n  this._dateLastError = app.nuxt.dateErr\n  this._hadError = Boolean(app.nuxt.err)\n\n  // Get route's matched components\n  const matches = []\n  const Components = getMatchedComponents(to, matches)\n\n  // If no Components matched, generate 404\n  if (!Components.length) {\n    // Default layout\n    await callMiddleware.call(this, Components, app.context)\n    if (nextCalled) {\n      return\n    }\n\n    // Load layout for error page\n    const errorLayout = (NuxtError.options || NuxtError).layout\n    const layout = await this.loadLayout(\n      typeof errorLayout === 'function'\n        ? errorLayout.call(NuxtError, app.context)\n        : errorLayout\n    )\n\n    await callMiddleware.call(this, Components, app.context, layout)\n    if (nextCalled) {\n      return\n    }\n\n    // Show error page\n    app.context.error({ statusCode: 404, message: 'This page could not be found' })\n    return next()\n  }\n\n  // Update ._data and other properties if hot reloaded\n  Components.forEach((Component) => {\n    if (Component._Ctor && Component._Ctor.options) {\n      Component.options.asyncData = Component._Ctor.options.asyncData\n      Component.options.fetch = Component._Ctor.options.fetch\n    }\n  })\n\n  // Apply transitions\n  this.setTransitions(mapTransitions(Components, to, from))\n\n  try {\n    // Call middleware\n    await callMiddleware.call(this, Components, app.context)\n    if (nextCalled) {\n      return\n    }\n    if (app.context._errored) {\n      return next()\n    }\n\n    // Set layout\n    let layout = Components[0].options.layout\n    if (typeof layout === 'function') {\n      layout = layout(app.context)\n    }\n    layout = await this.loadLayout(layout)\n\n    // Call middleware for layout\n    await callMiddleware.call(this, Components, app.context, layout)\n    if (nextCalled) {\n      return\n    }\n    if (app.context._errored) {\n      return next()\n    }\n\n    // Call .validate()\n    let isValid = true\n    try {\n      for (const Component of Components) {\n        if (typeof Component.options.validate !== 'function') {\n          continue\n        }\n\n        isValid = await Component.options.validate(app.context)\n\n        if (!isValid) {\n          break\n        }\n      }\n    } catch (validationError) {\n      // ...If .validate() threw an error\n      this.error({\n        statusCode: validationError.statusCode || '500',\n        message: validationError.message\n      })\n      return next()\n    }\n\n    // ...If .validate() returned false\n    if (!isValid) {\n      this.error({ statusCode: 404, message: 'This page could not be found' })\n      return next()\n    }\n\n    let instances\n    // Call asyncData & fetch hooks on components matched by the route.\n    await Promise.all(Components.map((Component, i) => {\n      // Check if only children route changed\n      Component._path = compile(to.matched[matches[i]].path)(to.params)\n      Component._dataRefresh = false\n      // Check if Component need to be refreshed (call asyncData & fetch)\n      // Only if its slug has changed or is watch query changes\n      if ((this._pathChanged && this._queryChanged) || Component._path !== _lastPaths[i]) {\n        Component._dataRefresh = true\n      } else if (!this._pathChanged && this._queryChanged) {\n        const watchQuery = Component.options.watchQuery\n        if (watchQuery === true) {\n          Component._dataRefresh = true\n        } else if (Array.isArray(watchQuery)) {\n          Component._dataRefresh = watchQuery.some(key => this._diffQuery[key])\n        } else if (typeof watchQuery === 'function') {\n          if (!instances) {\n            instances = getMatchedComponentsInstances(to)\n          }\n          Component._dataRefresh = watchQuery.apply(instances[i], [to.query, from.query])\n        }\n      }\n      if (!this._hadError && this._isMounted && !Component._dataRefresh) {\n        return\n      }\n\n      const promises = []\n\n      const hasAsyncData = (\n        Component.options.asyncData &&\n        typeof Component.options.asyncData === 'function'\n      )\n\n      const hasFetch = Boolean(Component.options.fetch)\n\n      const loadingIncrease = (hasAsyncData && hasFetch) ? 30 : 45\n\n      // Call asyncData(context)\n      if (hasAsyncData) {\n        const promise = promisify(Component.options.asyncData, app.context)\n          .then((asyncDataResult) => {\n            applyAsyncData(Component, asyncDataResult)\n\n            if (this.$loading.increase) {\n              this.$loading.increase(loadingIncrease)\n            }\n          })\n        promises.push(promise)\n      }\n\n      // Check disabled page loading\n      this.$loading.manual = Component.options.loading === false\n\n      // Call fetch(context)\n      if (hasFetch) {\n        let p = Component.options.fetch(app.context)\n        if (!p || (!(p instanceof Promise) && (typeof p.then !== 'function'))) {\n          p = Promise.resolve(p)\n        }\n        p.then((fetchResult) => {\n          if (this.$loading.increase) {\n            this.$loading.increase(loadingIncrease)\n          }\n        })\n        promises.push(p)\n      }\n\n      return Promise.all(promises)\n    }))\n\n    // If not redirected\n    if (!nextCalled) {\n      if (this.$loading.finish && !this.$loading.manual) {\n        this.$loading.finish()\n      }\n\n      next()\n    }\n  } catch (err) {\n    const error = err || {}\n    if (error.message === 'ERR_REDIRECT') {\n      return this.$nuxt.$emit('routeChanged', to, from, error)\n    }\n    _lastPaths = []\n\n    globalHandleError(error)\n\n    // Load error layout\n    let layout = (NuxtError.options || NuxtError).layout\n    if (typeof layout === 'function') {\n      layout = layout(app.context)\n    }\n    await this.loadLayout(layout)\n\n    this.error(error)\n    this.$nuxt.$emit('routeChanged', to, from, error)\n    next()\n  }\n}\n\n// Fix components format in matched, it's due to code-splitting of vue-router\nfunction normalizeComponents (to, ___) {\n  flatMapComponents(to, (Component, _, match, key) => {\n    if (typeof Component === 'object' && !Component.options) {\n      // Updated via vue-router resolveAsyncComponents()\n      Component = Vue.extend(Component)\n      Component._Ctor = Component\n      match.components[key] = Component\n    }\n    return Component\n  })\n}\n\nfunction showNextPage (to) {\n  // Hide error component if no error\n  if (this._hadError && this._dateLastError === this.$options.nuxt.dateErr) {\n    this.error()\n  }\n\n  // Set layout\n  let layout = this.$options.nuxt.err\n    ? (NuxtError.options || NuxtError).layout\n    : to.matched[0].components.default.options.layout\n\n  if (typeof layout === 'function') {\n    layout = layout(app.context)\n  }\n  this.setLayout(layout)\n}\n\n// When navigating on a different route but the same component is used, Vue.js\n// Will not update the instance data, so we have to update $data ourselves\nfunction fixPrepatch (to, ___) {\n  if (this._pathChanged === false && this._queryChanged === false) {\n    return\n  }\n\n  const instances = getMatchedComponentsInstances(to)\n  const Components = getMatchedComponents(to)\n\n  Vue.nextTick(() => {\n    instances.forEach((instance, i) => {\n      if (!instance || instance._isDestroyed) {\n        return\n      }\n\n      if (\n        instance.constructor._dataRefresh &&\n        Components[i] === instance.constructor &&\n        instance.$vnode.data.keepAlive !== true &&\n        typeof instance.constructor.options.data === 'function'\n      ) {\n        const newData = instance.constructor.options.data.call(instance)\n        for (const key in newData) {\n          Vue.set(instance.$data, key, newData[key])\n        }\n\n        // Ensure to trigger scroll event after calling scrollBehavior\n        window.$nuxt.$nextTick(() => {\n          window.$nuxt.$emit('triggerScroll')\n        })\n      }\n    })\n    showNextPage.call(this, to)\n\n    // Hot reloading\n    setTimeout(() => hotReloadAPI(this), 100)\n  })\n}\n\nfunction nuxtReady (_app) {\n  window.onNuxtReadyCbs.forEach((cb) => {\n    if (typeof cb === 'function') {\n      cb(_app)\n    }\n  })\n  // Special JSDOM\n  if (typeof window._onNuxtLoaded === 'function') {\n    window._onNuxtLoaded(_app)\n  }\n  // Add router hooks\n  router.afterEach((to, from) => {\n    // Wait for fixPrepatch + $data updates\n    Vue.nextTick(() => _app.$nuxt.$emit('routeChanged', to, from))\n  })\n}\n\nconst noopData = () => { return {} }\nconst noopFetch = () => {}\n\n// Special hot reload with asyncData(context)\nfunction getNuxtChildComponents ($parent, $components = []) {\n  $parent.$children.forEach(($child) => {\n    if ($child.$vnode && $child.$vnode.data.nuxtChild && !$components.find(c =>(c.$options.__file === $child.$options.__file))) {\n      $components.push($child)\n    }\n    if ($child.$children && $child.$children.length) {\n      getNuxtChildComponents($child, $components)\n    }\n  })\n\n  return $components\n}\n\nfunction hotReloadAPI(_app) {\n  if (!module.hot) return\n\n  let $components = getNuxtChildComponents(_app.$nuxt, [])\n\n  $components.forEach(addHotReload.bind(_app))\n}\n\nfunction addHotReload ($component, depth) {\n  if ($component.$vnode.data._hasHotReload) return\n  $component.$vnode.data._hasHotReload = true\n\n  var _forceUpdate = $component.$forceUpdate.bind($component.$parent)\n\n  $component.$vnode.context.$forceUpdate = async () => {\n    let Components = getMatchedComponents(router.currentRoute)\n    let Component = Components[depth]\n    if (!Component) {\n      return _forceUpdate()\n    }\n    if (typeof Component === 'object' && !Component.options) {\n      // Updated via vue-router resolveAsyncComponents()\n      Component = Vue.extend(Component)\n      Component._Ctor = Component\n    }\n    this.error()\n    let promises = []\n    const next = function (path) {\n      this.$loading.finish && this.$loading.finish()\n      router.push(path)\n    }\n    await setContext(app, {\n      route: router.currentRoute,\n      isHMR: true,\n      next: next.bind(this)\n    })\n    const context = app.context\n\n    if (this.$loading.start && !this.$loading.manual) {\n      this.$loading.start()\n    }\n\n    callMiddleware.call(this, Components, context)\n    .then(() => {\n      // If layout changed\n      if (depth !== 0) {\n        return\n      }\n\n      let layout = Component.options.layout || 'default'\n      if (typeof layout === 'function') {\n        layout = layout(context)\n      }\n      if (this.layoutName === layout) {\n        return\n      }\n      let promise = this.loadLayout(layout)\n      promise.then(() => {\n        this.setLayout(layout)\n        Vue.nextTick(() => hotReloadAPI(this))\n      })\n      return promise\n    })\n\n    .then(() => {\n      return callMiddleware.call(this, Components, context, this.layout)\n    })\n\n    .then(() => {\n      // Call asyncData(context)\n      let pAsyncData = promisify(Component.options.asyncData || noopData, context)\n      pAsyncData.then((asyncDataResult) => {\n        applyAsyncData(Component, asyncDataResult)\n        this.$loading.increase && this.$loading.increase(30)\n      })\n      promises.push(pAsyncData)\n\n      // Call fetch()\n      Component.options.fetch = Component.options.fetch || noopFetch\n      let pFetch = Component.options.fetch(context)\n      if (!pFetch || (!(pFetch instanceof Promise) && (typeof pFetch.then !== 'function'))) { pFetch = Promise.resolve(pFetch) }\n      pFetch.then(() => this.$loading.increase && this.$loading.increase(30))\n      promises.push(pFetch)\n\n      return Promise.all(promises)\n    })\n    .then(() => {\n      this.$loading.finish && this.$loading.finish()\n      _forceUpdate()\n      setTimeout(() => hotReloadAPI(this), 100)\n    })\n  }\n}\n\nasync function mountApp (__app) {\n  // Set global variables\n  app = __app.app\n  router = __app.router\n  store = __app.store\n\n  // Create Vue instance\n  const _app = new Vue(app)\n\n  // Load layout\n  const layout = NUXT.layout || 'default'\n  await _app.loadLayout(layout)\n  _app.setLayout(layout)\n\n  // Mounts Vue app to DOM element\n  const mount = () => {\n    _app.$mount('#__nuxt')\n\n    // Add afterEach router hooks\n    router.afterEach(normalizeComponents)\n    router.afterEach(fixPrepatch.bind(_app))\n\n    // Listen for first Vue update\n    Vue.nextTick(() => {\n      // Call window.{{globals.readyCallback}} callbacks\n      nuxtReady(_app)\n\n      // Enable hot reloading\n      hotReloadAPI(_app)\n    })\n  }\n\n  // Resolve route components\n  const Components = await Promise.all(resolveComponents(router))\n\n  // Enable transitions\n  _app.setTransitions = _app.$options.nuxt.setTransitions.bind(_app)\n  if (Components.length) {\n    _app.setTransitions(mapTransitions(Components, router.currentRoute))\n    _lastPaths = router.currentRoute.matched.map(route => compile(route.path)(router.currentRoute.params))\n  }\n\n  // Initialize error handler\n  _app.$loading = {} // To avoid error while _app.$nuxt does not exist\n  if (NUXT.error) {\n    _app.error(NUXT.error)\n  }\n\n  // Add beforeEach router hooks\n  router.beforeEach(loadAsyncComponents.bind(_app))\n  router.beforeEach(render.bind(_app))\n\n  // If page already is server rendered\n  if (NUXT.serverRendered) {\n    mount()\n    return\n  }\n\n  // First render on client-side\n  const clientFirstMount = () => {\n    normalizeComponents(router.currentRoute, router.currentRoute)\n    showNextPage.call(_app, router.currentRoute)\n    // Don't call fixPrepatch.call(_app, router.currentRoute, router.currentRoute) since it's first render\n    mount()\n  }\n\n  render.call(_app, router.currentRoute, router.currentRoute, (path) => {\n    // If not redirected\n    if (!path) {\n      clientFirstMount()\n      return\n    }\n\n    // Add a one-time afterEach hook to\n    // mount the app wait for redirect and route gets resolved\n    const unregisterHook = router.afterEach((to, from) => {\n      unregisterHook()\n      clientFirstMount()\n    })\n\n    // Push the path and let route to be resolved\n    router.push(path, undefined, (err) => {\n      if (err) {\n        errorHandler(err)\n      }\n    })\n  })\n}\n"]}]}