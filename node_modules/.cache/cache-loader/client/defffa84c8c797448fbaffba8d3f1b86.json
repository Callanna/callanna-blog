{"remainingRequest":"/Users/pro/Documents/WebWork/GitHub/iBlog-master/node_modules/babel-loader/lib/index.js??ref--2-1!/Users/pro/Documents/WebWork/GitHub/iBlog-master/.nuxt/auth/auth.js","dependencies":[{"path":"/Users/pro/Documents/WebWork/GitHub/iBlog-master/.nuxt/auth/auth.js","mtime":1597482623750},{"path":"/Users/pro/Documents/WebWork/GitHub/iBlog-master/node_modules/cache-loader/dist/cjs.js","mtime":1583743859870},{"path":"/Users/pro/Documents/WebWork/GitHub/iBlog-master/node_modules/babel-loader/lib/index.js","mtime":1578715241550}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/pro/Documents/WebWork/GitHub/iBlog-master/.nuxt/auth/auth.js"],"names":["Storage","routeOption","isRelativeURL","isSet","isSameURL","getProp","Auth","ctx","options","strategies","_errorListeners","_redirectListeners","initialState","user","loggedIn","storage","$storage","$state","state","resetOnError","onError","reset","syncUniversal","defaultStrategy","strategy","setUniversal","Promise","resolve","mounted","callOnError","process","client","watchLoggedIn","watchState","route","redirect","key","_get_state_warn_shown","console","warn","getState","name","getUniversal","fetchUserOnce","arguments","catch","error","method","reject","args","setStrategy","then","login","wrapLogin","fetchUser","logout","token","setUserToken","setToken","setUser","setRefreshToken","_key","prefix","refresh_token","refreshToken","setState","Boolean","endpoint","defaults","_endpoint","Object","assign","app","$axios","request","response","propertyName","data","getToken","tokenName","headers","promise","listener","push","payload","fn","noRouter","from","fullPathRedirect","fullPath","path","to","rewriteRedirects","callOnRedirect","window","location","replace","query","scope","userScopes","scopeKey","Array","isArray","includes","_state_warn_shown"],"mappings":"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","sourcesContent":["import Storage from './storage'\nimport { routeOption, isRelativeURL, isSet, isSameURL, getProp } from './utilities'\n\nexport default class Auth {\n  constructor (ctx, options) {\n    this.ctx = ctx\n    this.options = options\n\n    // Strategies\n    this.strategies = {}\n\n    // Error listeners\n    this._errorListeners = []\n\n    // Redirect listeners\n    this._redirectListeners = []\n\n    // Storage & State\n    options.initialState = { user: null, loggedIn: false }\n    const storage = new Storage(ctx, options)\n\n    this.$storage = storage\n    this.$state = storage.state\n  }\n\n  async init () {\n    // Reset on error\n    if (this.options.resetOnError) {\n      this.onError((...args) => {\n        if (typeof (this.options.resetOnError) !== 'function' || this.options.resetOnError(...args)) {\n          this.reset()\n        }\n      })\n    }\n\n    // Restore strategy\n    this.$storage.syncUniversal('strategy', this.options.defaultStrategy)\n\n    // Set default strategy if current one is invalid\n    if (!this.strategy) {\n      this.$storage.setUniversal('strategy', this.options.defaultStrategy)\n\n      // Give up if still invalid\n      if (!this.strategy) {\n        return Promise.resolve()\n      }\n    }\n\n    try {\n      // Call mounted for active strategy on initial load\n      await this.mounted()\n    } catch (error) {\n      this.callOnError(error)\n    } finally {\n      // Watch for loggedIn changes only in client side\n      if (process.client && this.options.watchLoggedIn) {\n        this.$storage.watchState('loggedIn', loggedIn => {\n          if (!routeOption(this.ctx.route, 'auth', false)) {\n            this.redirect(loggedIn ? 'home' : 'logout')\n          }\n        })\n      }\n    }\n  }\n\n  // Backward compatibility\n  get state () {\n    if (!this._state_warn_shown) {\n      this._state_warn_shown = true\n      // eslint-disable-next-line no-console\n      console.warn('[AUTH] $auth.state is deprecated. Please use $auth.$state or top level props like $auth.loggedIn')\n    }\n\n    return this.$state\n  }\n\n  getState (key) {\n    if (!this._get_state_warn_shown) {\n      this._get_state_warn_shown = true\n      // eslint-disable-next-line no-console\n      console.warn('[AUTH] $auth.getState is deprecated. Please use $auth.$storage.getState() or top level props like $auth.loggedIn')\n    }\n\n    return this.$storage.getState(key)\n  }\n\n  // ---------------------------------------------------------------\n  // Strategy and Scheme\n  // ---------------------------------------------------------------\n\n  get strategy () {\n    return this.strategies[this.$state.strategy]\n  }\n\n  registerStrategy (name, strategy) {\n    this.strategies[name] = strategy\n  }\n\n  setStrategy (name) {\n    if (name === this.$storage.getUniversal('strategy')) {\n      return Promise.resolve()\n    }\n\n    // Set strategy\n    this.$storage.setUniversal('strategy', name)\n\n    // Call mounted hook on active strategy\n    return this.mounted()\n  }\n\n  mounted () {\n    if (!this.strategy.mounted) {\n      return this.fetchUserOnce()\n    }\n\n    return Promise.resolve(this.strategy.mounted(...arguments)).catch(error => {\n      this.callOnError(error, { method: 'mounted' })\n      return Promise.reject(error)\n    })\n  }\n\n  loginWith (name, ...args) {\n    return this.setStrategy(name).then(() => this.login(...args))\n  }\n\n  login () {\n    if (!this.strategy.login) {\n      return Promise.resolve()\n    }\n\n    return this.wrapLogin(this.strategy.login(...arguments)).catch(error => {\n      this.callOnError(error, { method: 'login' })\n      return Promise.reject(error)\n    })\n  }\n\n  fetchUser () {\n    if (!this.strategy.fetchUser) {\n      return Promise.resolve()\n    }\n\n    return Promise.resolve(this.strategy.fetchUser(...arguments)).catch(error => {\n      this.callOnError(error, { method: 'fetchUser' })\n      return Promise.reject(error)\n    })\n  }\n\n  logout () {\n    if (!this.strategy.logout) {\n      this.reset()\n      return Promise.resolve()\n    }\n\n    return Promise.resolve(this.strategy.logout(...arguments)).catch(error => {\n      this.callOnError(error, { method: 'logout' })\n      return Promise.reject(error)\n    })\n  }\n\n  setUserToken (token) {\n    if (!this.strategy.setUserToken) {\n      this.setToken(this.strategy.name, token)\n      return Promise.resolve()\n    }\n\n    return Promise.resolve(this.strategy.setUserToken(token)).catch(error => {\n      this.callOnError(error, { method: 'setUserToken' })\n      return Promise.reject(error)\n    })\n  }\n\n  reset () {\n    if (!this.strategy.reset) {\n      this.setUser(false)\n      this.setToken(this.$state.strategy, false)\n      this.setRefreshToken(this.$state.strategy, false)\n      return Promise.resolve()\n    }\n\n    return Promise.resolve(this.strategy.reset(...arguments)).catch(error => {\n      this.callOnError(error, { method: 'reset' })\n      return Promise.reject(error)\n    })\n  }\n\n  // ---------------------------------------------------------------\n  // Token helpers\n  // ---------------------------------------------------------------\n\n  getToken (strategy) {\n    const _key = this.options.token.prefix + strategy\n\n    return this.$storage.getUniversal(_key)\n  }\n\n  setToken (strategy, token) {\n    const _key = this.options.token.prefix + strategy\n\n    return this.$storage.setUniversal(_key, token)\n  }\n\n  syncToken (strategy) {\n    const _key = this.options.token.prefix + strategy\n\n    return this.$storage.syncUniversal(_key)\n  }\n\n  // ---------------------------------------------------------------\n  // Refresh token helpers\n  // ---------------------------------------------------------------\n\n  getRefreshToken (strategy) {\n    const _key = this.options.refresh_token.prefix + strategy\n\n    return this.$storage.getUniversal(_key)\n  }\n\n  setRefreshToken (strategy, refreshToken) {\n    const _key = this.options.refresh_token.prefix + strategy\n\n    return this.$storage.setUniversal(_key, refreshToken)\n  }\n\n  syncRefreshToken (strategy) {\n    const _key = this.options.refresh_token.prefix + strategy\n\n    return this.$storage.syncUniversal(_key)\n  }\n\n  // ---------------------------------------------------------------\n  // User helpers\n  // ---------------------------------------------------------------\n\n  get user () {\n    return this.$state.user\n  }\n\n  get loggedIn () {\n    return this.$state.loggedIn\n  }\n\n  fetchUserOnce () {\n    if (!this.$state.user) {\n      return this.fetchUser(...arguments)\n    }\n    return Promise.resolve()\n  }\n\n  setUser (user) {\n    this.$storage.setState('user', user)\n    this.$storage.setState('loggedIn', Boolean(user))\n  }\n\n  // ---------------------------------------------------------------\n  // Utils\n  // ---------------------------------------------------------------\n\n  get busy () {\n    return this.$storage.getState('busy')\n  }\n\n  request (endpoint, defaults) {\n    const _endpoint =\n      typeof defaults === 'object'\n        ? Object.assign({}, defaults, endpoint)\n        : endpoint\n\n    if (!this.ctx.app.$axios) {\n      // eslint-disable-next-line no-console\n      console.error('[AUTH] add the @nuxtjs/axios module to nuxt.config file')\n      return\n    }\n\n    return this.ctx.app.$axios\n      .request(_endpoint)\n      .then(response => {\n        if (_endpoint.propertyName) {\n          return getProp(response.data, _endpoint.propertyName)\n        } else {\n          return response.data\n        }\n      })\n      .catch(error => {\n        // Call all error handlers\n        this.callOnError(error, { method: 'request' })\n\n        // Throw error\n        return Promise.reject(error)\n      })\n  }\n\n  requestWith (strategy, endpoint, defaults) {\n    const token = this.getToken(strategy)\n\n    const _endpoint = Object.assign({}, defaults, endpoint)\n\n    const tokenName = this.strategies[strategy].options.tokenName || 'Authorization'\n    if (!_endpoint.headers) {\n      _endpoint.headers = {}\n    }\n    if (!_endpoint.headers[tokenName] && isSet(token) && token) {\n      _endpoint.headers[tokenName] = token\n    }\n\n    return this.request(_endpoint)\n  }\n\n  wrapLogin (promise) {\n    this.$storage.setState('busy', true)\n    this.error = null\n\n    return Promise.resolve(promise)\n      .then(() => {\n        this.$storage.setState('busy', false)\n      })\n      .catch(error => {\n        this.$storage.setState('busy', false)\n        return Promise.reject(error)\n      })\n  }\n\n  onError (listener) {\n    this._errorListeners.push(listener)\n  }\n\n  callOnError (error, payload = {}) {\n    this.error = error\n\n    for (const fn of this._errorListeners) {\n      fn(error, payload)\n    }\n  }\n\n  redirect (name, noRouter = false) {\n    if (!this.options.redirect) {\n      return\n    }\n\n    const from = this.options.fullPathRedirect ? this.ctx.route.fullPath : this.ctx.route.path\n\n    let to = this.options.redirect[name]\n    if (!to) {\n      return\n    }\n\n    // Apply rewrites\n    if (this.options.rewriteRedirects) {\n      if (name === 'login' && isRelativeURL(from) && !isSameURL(to, from)) {\n        this.$storage.setUniversal('redirect', from)\n      }\n\n      if (name === 'home') {\n        const redirect = this.$storage.getUniversal('redirect')\n        this.$storage.setUniversal('redirect', null)\n\n        if (isRelativeURL(redirect)) {\n          to = redirect\n        }\n      }\n    }\n\n    // Call onRedirect hook\n    to = this.callOnRedirect(to, from) || to\n\n    // Prevent infinity redirects\n    if (isSameURL(to, from)) {\n      return\n    }\n\n    if (process.client) {\n      if (noRouter) {\n        window.location.replace(to)\n      } else {\n        this.ctx.redirect(to, this.ctx.query)\n      }\n    } else {\n      this.ctx.redirect(to, this.ctx.query)\n    }\n  }\n\n  onRedirect (listener) {\n    this._redirectListeners.push(listener)\n  }\n\n  callOnRedirect (to, from) {\n    for (const fn of this._redirectListeners) {\n      to = fn(to, from) || to\n    }\n    return to\n  }\n\n  hasScope (scope) {\n    const userScopes = this.$state.user && getProp(this.$state.user, this.options.scopeKey)\n\n    if (!userScopes) {\n      return false\n    }\n\n    if (Array.isArray(userScopes)) {\n      return userScopes.includes(scope)\n    }\n\n    return Boolean(getProp(userScopes, scope))\n  }\n}\n"]}]}