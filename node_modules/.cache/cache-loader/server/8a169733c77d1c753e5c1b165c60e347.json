{"remainingRequest":"/Users/pro/Documents/WebWork/GitHub/Callanna-iBlog/node_modules/babel-loader/lib/index.js??ref--2-1!/Users/pro/Documents/WebWork/GitHub/Callanna-iBlog/.nuxt/utils.js","dependencies":[{"path":"/Users/pro/Documents/WebWork/GitHub/Callanna-iBlog/.nuxt/utils.js","mtime":1598705759779},{"path":"/Users/pro/Documents/WebWork/GitHub/Callanna-iBlog/node_modules/cache-loader/dist/cjs.js","mtime":1583743859870},{"path":"/Users/pro/Documents/WebWork/GitHub/Callanna-iBlog/node_modules/babel-loader/lib/index.js","mtime":1578715241550}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/pro/Documents/WebWork/GitHub/Callanna-iBlog/.nuxt/utils.js"],"names":["Vue","process","client","window","onNuxtReadyCbs","onNuxtReady","cb","push","empty","globalHandleError","error","config","errorHandler","interopDefault","promise","then","m","default","applyAsyncData","Component","asyncData","options","__hasNuxtData","ComponentData","_originDataFn","data","call","$ssrContext","cid","_Ctor","sanitizeComponent","extend","extendOptions","name","__file","getMatchedComponents","route","matches","prop","Array","prototype","concat","apply","matched","map","index","Object","keys","key","getMatchedComponentsInstances","flatMapComponents","fn","components","reduce","promises","instances","resolveRouteComponents","Promise","all","instance","match","getRouteData","meta","setContext","app","context","isStatic","static","isDev","isHMR","store","payload","base","env","req","res","ssrContext","redirect","status","path","query","_redirected","pathType","router","resolve","fullPath","test","next","formatUrl","server","location","replace","Error","beforeNuxtRender","beforeRenderFns","nuxtState","__NUXT__","currentRouteData","fromRouteData","from","_errored","params","middlewareSeries","appContext","length","promisify","slice","err","getLocation","mode","decodeURI","pathname","hash","indexOf","search","compile","str","tokensToFunction","parse","getQueryDiff","toQuery","fromQuery","diff","queries","k","String","normalizeError","message","JSON","stringify","e","constructor","statusCode","response","PATH_REGEXP","RegExp","join","tokens","defaultDelimiter","delimiter","exec","escaped","offset","prefix","capture","group","modifier","asterisk","partial","repeat","optional","pattern","Boolean","escapeGroup","escapeString","substr","encodeURIComponentPretty","slashAllowed","re","encodeURI","c","charCodeAt","toString","toUpperCase","encodeAsterisk","i","flags","obj","opts","encode","pretty","encodeURIComponent","token","value","segment","TypeError","isArray","j","sensitive","url","protocol","substring","startsWith","parts","split","result","shift","filter","formatQuery","sort","val","val2"],"mappings":"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","sourcesContent":["import Vue from 'vue'\n\n// window.{{globals.loadedCallback}} hook\n// Useful for jsdom testing or plugins (https://github.com/tmpvar/jsdom#dealing-with-asynchronous-script-loading)\nif (process.client) {\n  window.onNuxtReadyCbs = []\n  window.onNuxtReady = (cb) => {\n    window.onNuxtReadyCbs.push(cb)\n  }\n}\n\nexport function empty () {}\n\nexport function globalHandleError (error) {\n  if (Vue.config.errorHandler) {\n    Vue.config.errorHandler(error)\n  }\n}\n\nexport function interopDefault (promise) {\n  return promise.then(m => m.default || m)\n}\n\nexport function applyAsyncData (Component, asyncData) {\n  if (\n    // For SSR, we once all this function without second param to just apply asyncData\n    // Prevent doing this for each SSR request\n    !asyncData && Component.options.__hasNuxtData\n  ) {\n    return\n  }\n\n  const ComponentData = Component.options._originDataFn || Component.options.data || function () { return {} }\n  Component.options._originDataFn = ComponentData\n\n  Component.options.data = function () {\n    const data = ComponentData.call(this, this)\n    if (this.$ssrContext) {\n      asyncData = this.$ssrContext.asyncData[Component.cid]\n    }\n    return { ...data, ...asyncData }\n  }\n\n  Component.options.__hasNuxtData = true\n\n  if (Component._Ctor && Component._Ctor.options) {\n    Component._Ctor.options.data = Component.options.data\n  }\n}\n\nexport function sanitizeComponent (Component) {\n  // If Component already sanitized\n  if (Component.options && Component._Ctor === Component) {\n    return Component\n  }\n  if (!Component.options) {\n    Component = Vue.extend(Component) // fix issue #6\n    Component._Ctor = Component\n  } else {\n    Component._Ctor = Component\n    Component.extendOptions = Component.options\n  }\n  // For debugging purpose\n  if (!Component.options.name && Component.options.__file) {\n    Component.options.name = Component.options.__file\n  }\n  return Component\n}\n\nexport function getMatchedComponents (route, matches = false, prop = 'components') {\n  return Array.prototype.concat.apply([], route.matched.map((m, index) => {\n    return Object.keys(m[prop]).map((key) => {\n      matches && matches.push(index)\n      return m[prop][key]\n    })\n  }))\n}\n\nexport function getMatchedComponentsInstances (route, matches = false) {\n  return getMatchedComponents(route, matches, 'instances')\n}\n\nexport function flatMapComponents (route, fn) {\n  return Array.prototype.concat.apply([], route.matched.map((m, index) => {\n    return Object.keys(m.components).reduce((promises, key) => {\n      if (m.components[key]) {\n        promises.push(fn(m.components[key], m.instances[key], m, key, index))\n      } else {\n        delete m.components[key]\n      }\n      return promises\n    }, [])\n  }))\n}\n\nexport function resolveRouteComponents (route, fn) {\n  return Promise.all(\n    flatMapComponents(route, async (Component, instance, match, key) => {\n      // If component is a function, resolve it\n      if (typeof Component === 'function' && !Component.options) {\n        Component = await Component()\n      }\n      match.components[key] = Component = sanitizeComponent(Component)\n      return typeof fn === 'function' ? fn(Component, instance, match, key) : Component\n    })\n  )\n}\n\nexport async function getRouteData (route) {\n  if (!route) {\n    return\n  }\n  // Make sure the components are resolved (code-splitting)\n  await resolveRouteComponents(route)\n  // Send back a copy of route with meta based on Component definition\n  return {\n    ...route,\n    meta: getMatchedComponents(route).map((Component, index) => {\n      return { ...Component.options.meta, ...(route.matched[index] || {}).meta }\n    })\n  }\n}\n\nexport async function setContext (app, context) {\n  // If context not defined, create it\n  if (!app.context) {\n    app.context = {\n      isStatic: process.static,\n      isDev: false,\n      isHMR: false,\n      app,\n      store: app.store,\n      payload: context.payload,\n      error: context.error,\n      base: '/',\n      env: {}\n    }\n    // Only set once\n    if (context.req) {\n      app.context.req = context.req\n    }\n    if (context.res) {\n      app.context.res = context.res\n    }\n    if (context.ssrContext) {\n      app.context.ssrContext = context.ssrContext\n    }\n    app.context.redirect = (status, path, query) => {\n      if (!status) {\n        return\n      }\n      app.context._redirected = true\n      // if only 1 or 2 arguments: redirect('/') or redirect('/', { foo: 'bar' })\n      let pathType = typeof path\n      if (typeof status !== 'number' && (pathType === 'undefined' || pathType === 'object')) {\n        query = path || {}\n        path = status\n        pathType = typeof path\n        status = 302\n      }\n      if (pathType === 'object') {\n        path = app.router.resolve(path).route.fullPath\n      }\n      // \"/absolute/route\", \"./relative/route\" or \"../relative/route\"\n      if (/(^[.]{1,2}\\/)|(^\\/(?!\\/))/.test(path)) {\n        app.context.next({\n          path,\n          query,\n          status\n        })\n      } else {\n        path = formatUrl(path, query)\n        if (process.server) {\n          app.context.next({\n            path,\n            status\n          })\n        }\n        if (process.client) {\n          // https://developer.mozilla.org/en-US/docs/Web/API/Location/replace\n          window.location.replace(path)\n\n          // Throw a redirect error\n          throw new Error('ERR_REDIRECT')\n        }\n      }\n    }\n    if (process.server) {\n      app.context.beforeNuxtRender = fn => context.beforeRenderFns.push(fn)\n    }\n    if (process.client) {\n      app.context.nuxtState = window.__NUXT__\n    }\n  }\n\n  // Dynamic keys\n  const [currentRouteData, fromRouteData] = await Promise.all([\n    getRouteData(context.route),\n    getRouteData(context.from)\n  ])\n\n  if (context.route) {\n    app.context.route = currentRouteData\n  }\n\n  if (context.from) {\n    app.context.from = fromRouteData\n  }\n\n  app.context.next = context.next\n  app.context._redirected = false\n  app.context._errored = false\n  app.context.isHMR = false\n  app.context.params = app.context.route.params || {}\n  app.context.query = app.context.route.query || {}\n}\n\nexport function middlewareSeries (promises, appContext) {\n  if (!promises.length || appContext._redirected || appContext._errored) {\n    return Promise.resolve()\n  }\n  return promisify(promises[0], appContext)\n    .then(() => {\n      return middlewareSeries(promises.slice(1), appContext)\n    })\n}\n\nexport function promisify (fn, context) {\n  let promise\n  if (fn.length === 2) {\n    // fn(context, callback)\n    promise = new Promise((resolve) => {\n      fn(context, function (err, data) {\n        if (err) {\n          context.error(err)\n        }\n        data = data || {}\n        resolve(data)\n      })\n    })\n  } else {\n    promise = fn(context)\n  }\n\n  if (promise && promise instanceof Promise && typeof promise.then === 'function') {\n    return promise\n  }\n  return Promise.resolve(promise)\n}\n\n// Imported from vue-router\nexport function getLocation (base, mode) {\n  let path = decodeURI(window.location.pathname)\n  if (mode === 'hash') {\n    return window.location.hash.replace(/^#\\//, '')\n  }\n  if (base && path.indexOf(base) === 0) {\n    path = path.slice(base.length)\n  }\n  return (path || '/') + window.location.search + window.location.hash\n}\n\n// Imported from path-to-regexp\n\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\nexport function compile (str, options) {\n  return tokensToFunction(parse(str, options), options)\n}\n\nexport function getQueryDiff (toQuery, fromQuery) {\n  const diff = {}\n  const queries = { ...toQuery, ...fromQuery }\n  for (const k in queries) {\n    if (String(toQuery[k]) !== String(fromQuery[k])) {\n      diff[k] = true\n    }\n  }\n  return diff\n}\n\nexport function normalizeError (err) {\n  let message\n  if (!(err.message || typeof err === 'string')) {\n    try {\n      message = JSON.stringify(err, null, 2)\n    } catch (e) {\n      message = `[${err.constructor.name}]`\n    }\n  } else {\n    message = err.message || err\n  }\n  return {\n    ...err,\n    message,\n    statusCode: (err.statusCode || err.status || (err.response && err.response.status) || 500)\n  }\n}\n\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\nconst PATH_REGEXP = new RegExp([\n  // Match escaped characters that would otherwise appear in future matches.\n  // This allows the user to escape special characters that won't transform.\n  '(\\\\\\\\.)',\n  // Match Express-style parameters and un-named parameters with a prefix\n  // and optional suffixes. Matches appear as:\n  //\n  // \"/:test(\\\\d+)?\" => [\"/\", \"test\", \"\\d+\", undefined, \"?\", undefined]\n  // \"/route(\\\\d+)\"  => [undefined, undefined, undefined, \"\\d+\", undefined, undefined]\n  // \"/*\"            => [\"/\", undefined, undefined, undefined, undefined, \"*\"]\n  '([\\\\/.])?(?:(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?|(\\\\*))'\n].join('|'), 'g')\n\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\nfunction parse (str, options) {\n  const tokens = []\n  let key = 0\n  let index = 0\n  let path = ''\n  const defaultDelimiter = (options && options.delimiter) || '/'\n  let res\n\n  while ((res = PATH_REGEXP.exec(str)) != null) {\n    const m = res[0]\n    const escaped = res[1]\n    const offset = res.index\n    path += str.slice(index, offset)\n    index = offset + m.length\n\n    // Ignore already escaped sequences.\n    if (escaped) {\n      path += escaped[1]\n      continue\n    }\n\n    const next = str[index]\n    const prefix = res[2]\n    const name = res[3]\n    const capture = res[4]\n    const group = res[5]\n    const modifier = res[6]\n    const asterisk = res[7]\n\n    // Push the current path onto the tokens.\n    if (path) {\n      tokens.push(path)\n      path = ''\n    }\n\n    const partial = prefix != null && next != null && next !== prefix\n    const repeat = modifier === '+' || modifier === '*'\n    const optional = modifier === '?' || modifier === '*'\n    const delimiter = res[2] || defaultDelimiter\n    const pattern = capture || group\n\n    tokens.push({\n      name: name || key++,\n      prefix: prefix || '',\n      delimiter,\n      optional,\n      repeat,\n      partial,\n      asterisk: Boolean(asterisk),\n      pattern: pattern ? escapeGroup(pattern) : (asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?')\n    })\n  }\n\n  // Match any characters still remaining.\n  if (index < str.length) {\n    path += str.substr(index)\n  }\n\n  // If the path exists, push it onto the end.\n  if (path) {\n    tokens.push(path)\n  }\n\n  return tokens\n}\n\n/**\n * Prettier encoding of URI path segments.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeURIComponentPretty (str, slashAllowed) {\n  const re = slashAllowed ? /[?#]/g : /[/?#]/g\n  return encodeURI(str).replace(re, (c) => {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeAsterisk (str) {\n  return encodeURIComponentPretty(str, true)\n}\n\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\nfunction escapeString (str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, '\\\\$1')\n}\n\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\nfunction escapeGroup (group) {\n  return group.replace(/([=!:$/()])/g, '\\\\$1')\n}\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction (tokens, options) {\n  // Compile all the tokens into regexps.\n  const matches = new Array(tokens.length)\n\n  // Compile all the patterns before compilation.\n  for (let i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$', flags(options))\n    }\n  }\n\n  return function (obj, opts) {\n    let path = ''\n    const data = obj || {}\n    const options = opts || {}\n    const encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent\n\n    for (let i = 0; i < tokens.length; i++) {\n      const token = tokens[i]\n\n      if (typeof token === 'string') {\n        path += token\n\n        continue\n      }\n\n      const value = data[token.name || 'pathMatch']\n      let segment\n\n      if (value == null) {\n        if (token.optional) {\n          // Prepend partial segment prefixes.\n          if (token.partial) {\n            path += token.prefix\n          }\n\n          continue\n        } else {\n          throw new TypeError('Expected \"' + token.name + '\" to be defined')\n        }\n      }\n\n      if (Array.isArray(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but received `' + JSON.stringify(value) + '`')\n        }\n\n        if (value.length === 0) {\n          if (token.optional) {\n            continue\n          } else {\n            throw new TypeError('Expected \"' + token.name + '\" to not be empty')\n          }\n        }\n\n        for (let j = 0; j < value.length; j++) {\n          segment = encode(value[j])\n\n          if (!matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\", but received `' + JSON.stringify(segment) + '`')\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment\n        }\n\n        continue\n      }\n\n      segment = token.asterisk ? encodeAsterisk(value) : encode(value)\n\n      if (!matches[i].test(segment)) {\n        throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but received \"' + segment + '\"')\n      }\n\n      path += token.prefix + segment\n    }\n\n    return path\n  }\n}\n\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */\nfunction flags (options) {\n  return options && options.sensitive ? '' : 'i'\n}\n\n/**\n * Format given url, append query to url query string\n *\n * @param  {string} url\n * @param  {string} query\n * @return {string}\n */\nfunction formatUrl (url, query) {\n  let protocol\n  const index = url.indexOf('://')\n  if (index !== -1) {\n    protocol = url.substring(0, index)\n    url = url.substring(index + 3)\n  } else if (url.startsWith('//')) {\n    url = url.substring(2)\n  }\n\n  let parts = url.split('/')\n  let result = (protocol ? protocol + '://' : '//') + parts.shift()\n\n  let path = parts.filter(Boolean).join('/')\n  let hash\n  parts = path.split('#')\n  if (parts.length === 2) {\n    [path, hash] = parts\n  }\n\n  result += path ? '/' + path : ''\n\n  if (query && JSON.stringify(query) !== '{}') {\n    result += (url.split('?').length === 2 ? '&' : '?') + formatQuery(query)\n  }\n  result += hash ? '#' + hash : ''\n\n  return result\n}\n\n/**\n * Transform data object to query string\n *\n * @param  {object} query\n * @return {string}\n */\nfunction formatQuery (query) {\n  return Object.keys(query).sort().map((key) => {\n    const val = query[key]\n    if (val == null) {\n      return ''\n    }\n    if (Array.isArray(val)) {\n      return val.slice().map(val2 => [key, '=', val2].join('')).join('&')\n    }\n    return key + '=' + val\n  }).filter(Boolean).join('&')\n}\n"]}]}