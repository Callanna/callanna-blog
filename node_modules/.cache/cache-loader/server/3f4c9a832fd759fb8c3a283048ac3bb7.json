{"remainingRequest":"/Users/pro/Documents/WebWork/GitHub/Callanna-iBlog/node_modules/babel-loader/lib/index.js??ref--2-1!/Users/pro/Documents/WebWork/GitHub/Callanna-iBlog/.nuxt/store.js","dependencies":[{"path":"/Users/pro/Documents/WebWork/GitHub/Callanna-iBlog/.nuxt/store.js","mtime":1598705759779},{"path":"/Users/pro/Documents/WebWork/GitHub/Callanna-iBlog/node_modules/cache-loader/dist/cjs.js","mtime":1583743859870},{"path":"/Users/pro/Documents/WebWork/GitHub/Callanna-iBlog/node_modules/babel-loader/lib/index.js","mtime":1578715241550}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IFZ1ZSBmcm9tICd2dWUnOwppbXBvcnQgVnVleCBmcm9tICd2dWV4JzsKVnVlLnVzZShWdWV4KTsKbGV0IHN0b3JlID0ge307CgooZnVuY3Rpb24gdXBkYXRlTW9kdWxlcygpIHsKICBzdG9yZSA9IG5vcm1hbGl6ZVJvb3QocmVxdWlyZSgnLi4vc3RvcmUvaW5kZXgudHMnKSwgJ3N0b3JlL2luZGV4LnRzJyk7IC8vIElmIHN0b3JlIGlzIGFuIGV4cG9ydGVkIG1ldGhvZCA9IGNsYXNzaWMgbW9kZSAoZGVwcmVjYXRlZCkKICAvLyBFbmZvcmNlIHN0b3JlIG1vZHVsZXMKCiAgc3RvcmUubW9kdWxlcyA9IHN0b3JlLm1vZHVsZXMgfHwge307IC8vIElmIHRoZSBlbnZpcm9ubWVudCBzdXBwb3J0cyBob3QgcmVsb2FkaW5nLi4uCn0pKCk7IC8vIGNyZWF0ZVN0b3JlCgoKZXhwb3J0IGNvbnN0IGNyZWF0ZVN0b3JlID0gc3RvcmUgaW5zdGFuY2VvZiBGdW5jdGlvbiA/IHN0b3JlIDogKCkgPT4gewogIHJldHVybiBuZXcgVnVleC5TdG9yZShPYmplY3QuYXNzaWduKHsKICAgIHN0cmljdDogcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJwogIH0sIHN0b3JlKSk7Cn07CgpmdW5jdGlvbiBub3JtYWxpemVSb290KG1vZHVsZURhdGEsIGZpbGVQYXRoKSB7CiAgbW9kdWxlRGF0YSA9IG1vZHVsZURhdGEuZGVmYXVsdCB8fCBtb2R1bGVEYXRhOwoKICBpZiAobW9kdWxlRGF0YS5jb21taXQpIHsKICAgIHRocm93IG5ldyBFcnJvcihgW251eHRdICR7ZmlsZVBhdGh9IHNob3VsZCBleHBvcnQgYSBtZXRob2QgdGhhdCByZXR1cm5zIGEgVnVleCBpbnN0YW5jZS5gKTsKICB9CgogIGlmICh0eXBlb2YgbW9kdWxlRGF0YSAhPT0gJ2Z1bmN0aW9uJykgewogICAgLy8gQXZvaWQgVHlwZUVycm9yOiBzZXR0aW5nIGEgcHJvcGVydHkgdGhhdCBoYXMgb25seSBhIGdldHRlciB3aGVuIG92ZXJ3cml0aW5nIHRvcCBsZXZlbCBrZXlzCiAgICBtb2R1bGVEYXRhID0gT2JqZWN0LmFzc2lnbih7fSwgbW9kdWxlRGF0YSk7CiAgfQoKICByZXR1cm4gbm9ybWFsaXplTW9kdWxlKG1vZHVsZURhdGEsIGZpbGVQYXRoKTsKfQoKZnVuY3Rpb24gbm9ybWFsaXplTW9kdWxlKG1vZHVsZURhdGEsIGZpbGVQYXRoKSB7CiAgaWYgKG1vZHVsZURhdGEuc3RhdGUgJiYgdHlwZW9mIG1vZHVsZURhdGEuc3RhdGUgIT09ICdmdW5jdGlvbicpIHsKICAgIGNvbnNvbGUud2FybihgJ3N0YXRlJyBzaG91bGQgYmUgYSBtZXRob2QgdGhhdCByZXR1cm5zIGFuIG9iamVjdCBpbiAke2ZpbGVQYXRofWApOwogICAgY29uc3Qgc3RhdGUgPSBPYmplY3QuYXNzaWduKHt9LCBtb2R1bGVEYXRhLnN0YXRlKTsgLy8gQXZvaWQgVHlwZUVycm9yOiBzZXR0aW5nIGEgcHJvcGVydHkgdGhhdCBoYXMgb25seSBhIGdldHRlciB3aGVuIG92ZXJ3cml0aW5nIHRvcCBsZXZlbCBrZXlzCgogICAgbW9kdWxlRGF0YSA9IE9iamVjdC5hc3NpZ24oe30sIG1vZHVsZURhdGEsIHsKICAgICAgc3RhdGU6ICgpID0+IHN0YXRlCiAgICB9KTsKICB9CgogIHJldHVybiBtb2R1bGVEYXRhOwp9"},{"version":3,"sources":["/Users/pro/Documents/WebWork/GitHub/Callanna-iBlog/.nuxt/store.js"],"names":["Vue","Vuex","use","store","updateModules","normalizeRoot","require","modules","createStore","Function","Store","Object","assign","strict","process","env","NODE_ENV","moduleData","filePath","default","commit","Error","normalizeModule","state","console","warn"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEAD,GAAG,CAACE,GAAJ,CAAQD,IAAR;AAEA,IAAIE,KAAK,GAAG,EAAZ;;AAEA,CAAC,SAASC,aAAT,GAA0B;AACzBD,EAAAA,KAAK,GAAGE,aAAa,CAACC,OAAO,CAAC,mBAAD,CAAR,EAA+B,gBAA/B,CAArB,CADyB,CAGzB;AAEA;;AACAH,EAAAA,KAAK,CAACI,OAAN,GAAgBJ,KAAK,CAACI,OAAN,IAAiB,EAAjC,CANyB,CAQzB;AACD,CATD,I,CAWA;;;AACA,OAAO,MAAMC,WAAW,GAAGL,KAAK,YAAYM,QAAjB,GAA4BN,KAA5B,GAAoC,MAAM;AACnE,SAAO,IAAIF,IAAI,CAACS,KAAT,CAAeC,MAAM,CAACC,MAAP,CAAc;AAClCC,IAAAA,MAAM,EAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB;AADA,GAAd,EAEnBb,KAFmB,CAAf,CAAP;AAGD,CAJM;;AAMP,SAASE,aAAT,CAAwBY,UAAxB,EAAoCC,QAApC,EAA8C;AAC5CD,EAAAA,UAAU,GAAGA,UAAU,CAACE,OAAX,IAAsBF,UAAnC;;AAEA,MAAIA,UAAU,CAACG,MAAf,EAAuB;AACrB,UAAM,IAAIC,KAAJ,CAAW,UAASH,QAAS,uDAA7B,CAAN;AACD;;AAED,MAAI,OAAOD,UAAP,KAAsB,UAA1B,EAAsC;AACpC;AACAA,IAAAA,UAAU,GAAGN,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBK,UAAlB,CAAb;AACD;;AACD,SAAOK,eAAe,CAACL,UAAD,EAAaC,QAAb,CAAtB;AACD;;AAED,SAASI,eAAT,CAA0BL,UAA1B,EAAsCC,QAAtC,EAAgD;AAC9C,MAAID,UAAU,CAACM,KAAX,IAAoB,OAAON,UAAU,CAACM,KAAlB,KAA4B,UAApD,EAAgE;AAC9DC,IAAAA,OAAO,CAACC,IAAR,CAAc,wDAAuDP,QAAS,EAA9E;AAEA,UAAMK,KAAK,GAAGZ,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBK,UAAU,CAACM,KAA7B,CAAd,CAH8D,CAI9D;;AACAN,IAAAA,UAAU,GAAGN,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBK,UAAlB,EAA8B;AAAEM,MAAAA,KAAK,EAAE,MAAMA;AAAf,KAA9B,CAAb;AACD;;AACD,SAAON,UAAP;AACD","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\n\nVue.use(Vuex)\n\nlet store = {};\n\n(function updateModules () {\n  store = normalizeRoot(require('../store/index.ts'), 'store/index.ts')\n\n  // If store is an exported method = classic mode (deprecated)\n\n  // Enforce store modules\n  store.modules = store.modules || {}\n\n  // If the environment supports hot reloading...\n})()\n\n// createStore\nexport const createStore = store instanceof Function ? store : () => {\n  return new Vuex.Store(Object.assign({\n    strict: (process.env.NODE_ENV !== 'production')\n  }, store))\n}\n\nfunction normalizeRoot (moduleData, filePath) {\n  moduleData = moduleData.default || moduleData\n\n  if (moduleData.commit) {\n    throw new Error(`[nuxt] ${filePath} should export a method that returns a Vuex instance.`)\n  }\n\n  if (typeof moduleData !== 'function') {\n    // Avoid TypeError: setting a property that has only a getter when overwriting top level keys\n    moduleData = Object.assign({}, moduleData)\n  }\n  return normalizeModule(moduleData, filePath)\n}\n\nfunction normalizeModule (moduleData, filePath) {\n  if (moduleData.state && typeof moduleData.state !== 'function') {\n    console.warn(`'state' should be a method that returns an object in ${filePath}`)\n\n    const state = Object.assign({}, moduleData.state)\n    // Avoid TypeError: setting a property that has only a getter when overwriting top level keys\n    moduleData = Object.assign({}, moduleData, { state: () => state })\n  }\n  return moduleData\n}\n"]}]}