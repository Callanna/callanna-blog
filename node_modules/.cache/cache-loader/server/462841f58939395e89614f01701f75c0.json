{"remainingRequest":"/Users/pro/Documents/WebWork/GitHub/Callanna-iBlog/node_modules/babel-loader/lib/index.js??ref--2-1!/Users/pro/Documents/WebWork/GitHub/Callanna-iBlog/.nuxt/auth/middleware.js","dependencies":[{"path":"/Users/pro/Documents/WebWork/GitHub/Callanna-iBlog/.nuxt/auth/middleware.js","mtime":1598700047630},{"path":"/Users/pro/Documents/WebWork/GitHub/Callanna-iBlog/node_modules/cache-loader/dist/cjs.js","mtime":1583743859870},{"path":"/Users/pro/Documents/WebWork/GitHub/Callanna-iBlog/node_modules/babel-loader/lib/index.js","mtime":1578715241550}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IE1pZGRsZXdhcmUgZnJvbSAnLi4vbWlkZGxld2FyZSc7CmltcG9ydCB7IHJvdXRlT3B0aW9uLCBnZXRNYXRjaGVkQ29tcG9uZW50cywgbm9ybWFsaXplUGF0aCB9IGZyb20gJy4vdXRpbGl0aWVzJzsKCk1pZGRsZXdhcmUuYXV0aCA9IGZ1bmN0aW9uIChjdHgpIHsKICAvLyBEaXNhYmxlIG1pZGRsZXdhcmUgaWYgb3B0aW9uczogeyBhdXRoOiBmYWxzZSB9IGlzIHNldCBvbiB0aGUgcm91dGUKICBpZiAocm91dGVPcHRpb24oY3R4LnJvdXRlLCAnYXV0aCcsIGZhbHNlKSkgewogICAgcmV0dXJuOwogIH0gLy8gRGlzYWJsZSBtaWRkbGV3YXJlIGlmIG5vIHJvdXRlIHdhcyBtYXRjaGVkIHRvIGFsbG93IDQwNC9lcnJvciBwYWdlCgoKICBjb25zdCBtYXRjaGVzID0gW107CiAgY29uc3QgQ29tcG9uZW50cyA9IGdldE1hdGNoZWRDb21wb25lbnRzKGN0eC5yb3V0ZSwgbWF0Y2hlcyk7CgogIGlmICghQ29tcG9uZW50cy5sZW5ndGgpIHsKICAgIHJldHVybjsKICB9CgogIGNvbnN0IHsKICAgIGxvZ2luLAogICAgY2FsbGJhY2sKICB9ID0gY3R4LiRhdXRoLm9wdGlvbnMucmVkaXJlY3Q7CiAgY29uc3QgcGFnZUlzSW5HdWVzdE1vZGUgPSByb3V0ZU9wdGlvbihjdHgucm91dGUsICdhdXRoJywgJ2d1ZXN0Jyk7CgogIGNvbnN0IGluc2lkZVBhZ2UgPSBwYWdlID0+IG5vcm1hbGl6ZVBhdGgoY3R4LnJvdXRlLnBhdGgpID09PSBub3JtYWxpemVQYXRoKHBhZ2UpOwoKICBpZiAoY3R4LiRhdXRoLiRzdGF0ZS5sb2dnZWRJbikgewogICAgLy8gLS0gQXV0aG9yaXplZCAtLQogICAgaWYgKCFsb2dpbiB8fCBpbnNpZGVQYWdlKGxvZ2luKSB8fCBwYWdlSXNJbkd1ZXN0TW9kZSkgewogICAgICBjdHguJGF1dGgucmVkaXJlY3QoJ2hvbWUnKTsKICAgIH0KICB9IGVsc2UgewogICAgLy8gLS0gR3Vlc3QgLS0KICAgIC8vIChUaG9zZSBwYXNzaW5nIGBjYWxsYmFja2AgYXQgcnVudGltZSBuZWVkIHRvIG1hcmsgdGhlaXIgY2FsbGJhY2sgY29tcG9uZW50CiAgICAvLyB3aXRoIGBhdXRoOiBmYWxzZWAgdG8gYXZvaWQgYW4gdW5uZWNlc3NhcnkgcmVkaXJlY3QgZnJvbSBjYWxsYmFjayB0byBsb2dpbikKICAgIGlmICghcGFnZUlzSW5HdWVzdE1vZGUgJiYgKCFjYWxsYmFjayB8fCAhaW5zaWRlUGFnZShjYWxsYmFjaykpKSB7CiAgICAgIGN0eC4kYXV0aC5yZWRpcmVjdCgnbG9naW4nKTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["/Users/pro/Documents/WebWork/GitHub/Callanna-iBlog/.nuxt/auth/middleware.js"],"names":["Middleware","routeOption","getMatchedComponents","normalizePath","auth","ctx","route","matches","Components","length","login","callback","$auth","options","redirect","pageIsInGuestMode","insidePage","page","path","$state","loggedIn"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,eAAvB;AACA,SAASC,WAAT,EAAsBC,oBAAtB,EAA4CC,aAA5C,QAAiE,aAAjE;;AAEAH,UAAU,CAACI,IAAX,GAAkB,UAAUC,GAAV,EAAe;AAC/B;AACA,MAAIJ,WAAW,CAACI,GAAG,CAACC,KAAL,EAAY,MAAZ,EAAoB,KAApB,CAAf,EAA2C;AACzC;AACD,GAJ8B,CAM/B;;;AACA,QAAMC,OAAO,GAAG,EAAhB;AACA,QAAMC,UAAU,GAAGN,oBAAoB,CAACG,GAAG,CAACC,KAAL,EAAYC,OAAZ,CAAvC;;AACA,MAAI,CAACC,UAAU,CAACC,MAAhB,EAAwB;AACtB;AACD;;AAED,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBN,GAAG,CAACO,KAAJ,CAAUC,OAAV,CAAkBC,QAA9C;AACA,QAAMC,iBAAiB,GAAGd,WAAW,CAACI,GAAG,CAACC,KAAL,EAAY,MAAZ,EAAoB,OAApB,CAArC;;AACA,QAAMU,UAAU,GAAGC,IAAI,IAAId,aAAa,CAACE,GAAG,CAACC,KAAJ,CAAUY,IAAX,CAAb,KAAkCf,aAAa,CAACc,IAAD,CAA1E;;AAEA,MAAIZ,GAAG,CAACO,KAAJ,CAAUO,MAAV,CAAiBC,QAArB,EAA+B;AAC7B;AACA,QAAI,CAACV,KAAD,IAAUM,UAAU,CAACN,KAAD,CAApB,IAA+BK,iBAAnC,EAAsD;AACpDV,MAAAA,GAAG,CAACO,KAAJ,CAAUE,QAAV,CAAmB,MAAnB;AACD;AACF,GALD,MAKO;AACL;AACA;AACA;AACA,QAAI,CAACC,iBAAD,KAAuB,CAACJ,QAAD,IAAa,CAACK,UAAU,CAACL,QAAD,CAA/C,CAAJ,EAAgE;AAC9DN,MAAAA,GAAG,CAACO,KAAJ,CAAUE,QAAV,CAAmB,OAAnB;AACD;AACF;AACF,CA9BD","sourcesContent":["import Middleware from '../middleware'\nimport { routeOption, getMatchedComponents, normalizePath } from './utilities'\n\nMiddleware.auth = function (ctx) {\n  // Disable middleware if options: { auth: false } is set on the route\n  if (routeOption(ctx.route, 'auth', false)) {\n    return\n  }\n\n  // Disable middleware if no route was matched to allow 404/error page\n  const matches = []\n  const Components = getMatchedComponents(ctx.route, matches)\n  if (!Components.length) {\n    return\n  }\n\n  const { login, callback } = ctx.$auth.options.redirect\n  const pageIsInGuestMode = routeOption(ctx.route, 'auth', 'guest')\n  const insidePage = page => normalizePath(ctx.route.path) === normalizePath(page)\n\n  if (ctx.$auth.$state.loggedIn) {\n    // -- Authorized --\n    if (!login || insidePage(login) || pageIsInGuestMode) {\n      ctx.$auth.redirect('home')\n    }\n  } else {\n    // -- Guest --\n    // (Those passing `callback` at runtime need to mark their callback component\n    // with `auth: false` to avoid an unnecessary redirect from callback to login)\n    if (!pageIsInGuestMode && (!callback || !insidePage(callback))) {\n      ctx.$auth.redirect('login')\n    }\n  }\n}\n"]}]}