{"remainingRequest":"/Users/pro/Documents/WebWork/GitHub/Callanna-iBlog/node_modules/babel-loader/lib/index.js??ref--2-1!/Users/pro/Documents/WebWork/GitHub/Callanna-iBlog/.nuxt/auth/schemes/local.js","dependencies":[{"path":"/Users/pro/Documents/WebWork/GitHub/Callanna-iBlog/.nuxt/auth/schemes/local.js","mtime":1598705829981},{"path":"/Users/pro/Documents/WebWork/GitHub/Callanna-iBlog/node_modules/cache-loader/dist/cjs.js","mtime":1583743859870},{"path":"/Users/pro/Documents/WebWork/GitHub/Callanna-iBlog/node_modules/babel-loader/lib/index.js","mtime":1578715241550}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZXhwb3J0IGRlZmF1bHQgY2xhc3MgTG9jYWxTY2hlbWUgewogIGNvbnN0cnVjdG9yKGF1dGgsIG9wdGlvbnMpIHsKICAgIHRoaXMuJGF1dGggPSBhdXRoOwogICAgdGhpcy5uYW1lID0gb3B0aW9ucy5fbmFtZTsKICAgIHRoaXMub3B0aW9ucyA9IE9iamVjdC5hc3NpZ24oe30sIERFRkFVTFRTLCBvcHRpb25zKTsKICB9CgogIF9zZXRUb2tlbih0b2tlbikgewogICAgaWYgKHRoaXMub3B0aW9ucy5nbG9iYWxUb2tlbikgewogICAgICAvLyBTZXQgQXV0aG9yaXphdGlvbiB0b2tlbiBmb3IgYWxsIGF4aW9zIHJlcXVlc3RzCiAgICAgIHRoaXMuJGF1dGguY3R4LmFwcC4kYXhpb3Muc2V0SGVhZGVyKHRoaXMub3B0aW9ucy50b2tlbk5hbWUsIHRva2VuKTsKICAgIH0KICB9CgogIF9jbGVhclRva2VuKCkgewogICAgaWYgKHRoaXMub3B0aW9ucy5nbG9iYWxUb2tlbikgewogICAgICAvLyBDbGVhciBBdXRob3JpemF0aW9uIHRva2VuIGZvciBhbGwgYXhpb3MgcmVxdWVzdHMKICAgICAgdGhpcy4kYXV0aC5jdHguYXBwLiRheGlvcy5zZXRIZWFkZXIodGhpcy5vcHRpb25zLnRva2VuTmFtZSwgZmFsc2UpOwogICAgfQogIH0KCiAgbW91bnRlZCgpIHsKICAgIGlmICh0aGlzLm9wdGlvbnMudG9rZW5SZXF1aXJlZCkgewogICAgICBjb25zdCB0b2tlbiA9IHRoaXMuJGF1dGguc3luY1Rva2VuKHRoaXMubmFtZSk7CgogICAgICB0aGlzLl9zZXRUb2tlbih0b2tlbik7CiAgICB9CgogICAgcmV0dXJuIHRoaXMuJGF1dGguZmV0Y2hVc2VyT25jZSgpOwogIH0KCiAgYXN5bmMgbG9naW4oZW5kcG9pbnQpIHsKICAgIGlmICghdGhpcy5vcHRpb25zLmVuZHBvaW50cy5sb2dpbikgewogICAgICByZXR1cm47CiAgICB9IC8vIERpdGNoIGFueSBsZWZ0b3ZlciBsb2NhbCB0b2tlbnMgYmVmb3JlIGF0dGVtcHRpbmcgdG8gbG9nIGluCgoKICAgIGF3YWl0IHRoaXMuX2xvZ291dExvY2FsbHkoKTsKICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHRoaXMuJGF1dGgucmVxdWVzdChlbmRwb2ludCwgdGhpcy5vcHRpb25zLmVuZHBvaW50cy5sb2dpbik7CgogICAgaWYgKHRoaXMub3B0aW9ucy50b2tlblJlcXVpcmVkKSB7CiAgICAgIGNvbnN0IHRva2VuID0gdGhpcy5vcHRpb25zLnRva2VuVHlwZSA/IHRoaXMub3B0aW9ucy50b2tlblR5cGUgKyAnICcgKyByZXN1bHQgOiByZXN1bHQ7CiAgICAgIHRoaXMuJGF1dGguc2V0VG9rZW4odGhpcy5uYW1lLCB0b2tlbik7CgogICAgICB0aGlzLl9zZXRUb2tlbih0b2tlbik7CiAgICB9CgogICAgcmV0dXJuIHRoaXMuZmV0Y2hVc2VyKCk7CiAgfQoKICBhc3luYyBzZXRVc2VyVG9rZW4odG9rZW5WYWx1ZSkgewogICAgLy8gRGl0Y2ggYW55IGxlZnRvdmVyIGxvY2FsIHRva2VucyBiZWZvcmUgYXR0ZW1wdGluZyB0byBsb2cgaW4KICAgIGF3YWl0IHRoaXMuX2xvZ291dExvY2FsbHkoKTsKCiAgICBpZiAodGhpcy5vcHRpb25zLnRva2VuUmVxdWlyZWQpIHsKICAgICAgY29uc3QgdG9rZW4gPSB0aGlzLm9wdGlvbnMudG9rZW5UeXBlID8gdGhpcy5vcHRpb25zLnRva2VuVHlwZSArICcgJyArIHRva2VuVmFsdWUgOiB0b2tlblZhbHVlOwogICAgICB0aGlzLiRhdXRoLnNldFRva2VuKHRoaXMubmFtZSwgdG9rZW4pOwoKICAgICAgdGhpcy5fc2V0VG9rZW4odG9rZW4pOwogICAgfQoKICAgIHJldHVybiB0aGlzLmZldGNoVXNlcigpOwogIH0KCiAgYXN5bmMgZmV0Y2hVc2VyKGVuZHBvaW50KSB7CiAgICAvLyBUb2tlbiBpcyByZXF1aXJlZCBidXQgbm90IGF2YWlsYWJsZQogICAgaWYgKHRoaXMub3B0aW9ucy50b2tlblJlcXVpcmVkICYmICF0aGlzLiRhdXRoLmdldFRva2VuKHRoaXMubmFtZSkpIHsKICAgICAgcmV0dXJuOwogICAgfSAvLyBVc2VyIGVuZHBvaW50IGlzIGRpc2FibGVkLgoKCiAgICBpZiAoIXRoaXMub3B0aW9ucy5lbmRwb2ludHMudXNlcikgewogICAgICB0aGlzLiRhdXRoLnNldFVzZXIoe30pOwogICAgICByZXR1cm47CiAgICB9IC8vIFRyeSB0byBmZXRjaCB1c2VyIGFuZCB0aGVuIHNldAoKCiAgICBjb25zdCB1c2VyID0gYXdhaXQgdGhpcy4kYXV0aC5yZXF1ZXN0V2l0aCh0aGlzLm5hbWUsIGVuZHBvaW50LCB0aGlzLm9wdGlvbnMuZW5kcG9pbnRzLnVzZXIpOwogICAgdGhpcy4kYXV0aC5zZXRVc2VyKHVzZXIpOwogIH0KCiAgYXN5bmMgbG9nb3V0KGVuZHBvaW50KSB7CiAgICAvLyBPbmx5IGNvbm5lY3QgdG8gbG9nb3V0IGVuZHBvaW50IGlmIGl0J3MgY29uZmlndXJlZAogICAgaWYgKHRoaXMub3B0aW9ucy5lbmRwb2ludHMubG9nb3V0KSB7CiAgICAgIGF3YWl0IHRoaXMuJGF1dGgucmVxdWVzdFdpdGgodGhpcy5uYW1lLCBlbmRwb2ludCwgdGhpcy5vcHRpb25zLmVuZHBvaW50cy5sb2dvdXQpLmNhdGNoKCgpID0+IHt9KTsKICAgIH0gLy8gQnV0IGxvZ291dCBsb2NhbGx5IHJlZ2FyZGxlc3MKCgogICAgcmV0dXJuIHRoaXMuX2xvZ291dExvY2FsbHkoKTsKICB9CgogIGFzeW5jIF9sb2dvdXRMb2NhbGx5KCkgewogICAgaWYgKHRoaXMub3B0aW9ucy50b2tlblJlcXVpcmVkKSB7CiAgICAgIHRoaXMuX2NsZWFyVG9rZW4oKTsKICAgIH0KCiAgICByZXR1cm4gdGhpcy4kYXV0aC5yZXNldCgpOwogIH0KCn0KY29uc3QgREVGQVVMVFMgPSB7CiAgdG9rZW5SZXF1aXJlZDogdHJ1ZSwKICB0b2tlblR5cGU6ICdCZWFyZXInLAogIGdsb2JhbFRva2VuOiB0cnVlLAogIHRva2VuTmFtZTogJ0F1dGhvcml6YXRpb24nCn07"},{"version":3,"sources":["/Users/pro/Documents/WebWork/GitHub/Callanna-iBlog/.nuxt/auth/schemes/local.js"],"names":["LocalScheme","constructor","auth","options","$auth","name","_name","Object","assign","DEFAULTS","_setToken","token","globalToken","ctx","app","$axios","setHeader","tokenName","_clearToken","mounted","tokenRequired","syncToken","fetchUserOnce","login","endpoint","endpoints","_logoutLocally","result","request","tokenType","setToken","fetchUser","setUserToken","tokenValue","getToken","user","setUser","requestWith","logout","catch","reset"],"mappings":"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","sourcesContent":["export default class LocalScheme {\n  constructor (auth, options) {\n    this.$auth = auth\n    this.name = options._name\n\n    this.options = Object.assign({}, DEFAULTS, options)\n  }\n\n  _setToken (token) {\n    if (this.options.globalToken) {\n      // Set Authorization token for all axios requests\n      this.$auth.ctx.app.$axios.setHeader(this.options.tokenName, token)\n    }\n  }\n\n  _clearToken () {\n    if (this.options.globalToken) {\n      // Clear Authorization token for all axios requests\n      this.$auth.ctx.app.$axios.setHeader(this.options.tokenName, false)\n    }\n  }\n\n  mounted () {\n    if (this.options.tokenRequired) {\n      const token = this.$auth.syncToken(this.name)\n      this._setToken(token)\n    }\n\n    return this.$auth.fetchUserOnce()\n  }\n\n  async login (endpoint) {\n    if (!this.options.endpoints.login) {\n      return\n    }\n\n    // Ditch any leftover local tokens before attempting to log in\n    await this._logoutLocally()\n\n    const result = await this.$auth.request(\n      endpoint,\n      this.options.endpoints.login\n    )\n\n    if (this.options.tokenRequired) {\n      const token = this.options.tokenType\n        ? this.options.tokenType + ' ' + result\n        : result\n\n      this.$auth.setToken(this.name, token)\n      this._setToken(token)\n    }\n\n    return this.fetchUser()\n  }\n\n  async setUserToken (tokenValue) {\n    // Ditch any leftover local tokens before attempting to log in\n    await this._logoutLocally()\n\n    if (this.options.tokenRequired) {\n      const token = this.options.tokenType\n        ? this.options.tokenType + ' ' + tokenValue\n        : tokenValue\n\n      this.$auth.setToken(this.name, token)\n      this._setToken(token)\n    }\n\n    return this.fetchUser()\n  }\n\n  async fetchUser (endpoint) {\n    // Token is required but not available\n    if (this.options.tokenRequired && !this.$auth.getToken(this.name)) {\n      return\n    }\n\n    // User endpoint is disabled.\n    if (!this.options.endpoints.user) {\n      this.$auth.setUser({})\n      return\n    }\n\n    // Try to fetch user and then set\n    const user = await this.$auth.requestWith(\n      this.name,\n      endpoint,\n      this.options.endpoints.user\n    )\n    this.$auth.setUser(user)\n  }\n\n  async logout (endpoint) {\n    // Only connect to logout endpoint if it's configured\n    if (this.options.endpoints.logout) {\n      await this.$auth\n        .requestWith(this.name, endpoint, this.options.endpoints.logout)\n        .catch(() => { })\n    }\n\n    // But logout locally regardless\n    return this._logoutLocally()\n  }\n\n  async _logoutLocally () {\n    if (this.options.tokenRequired) {\n      this._clearToken()\n    }\n\n    return this.$auth.reset()\n  }\n}\n\nconst DEFAULTS = {\n  tokenRequired: true,\n  tokenType: 'Bearer',\n  globalToken: true,\n  tokenName: 'Authorization'\n}\n"]}]}